-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calc_phi_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hwPhi_V : IN STD_LOGIC_VECTOR (18 downto 0);
    hwSector_V : IN STD_LOGIC_VECTOR (4 downto 0);
    hwPhiGlobal_V : OUT STD_LOGIC_VECTOR (22 downto 0);
    hwPhiGlobal_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of calc_phi_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "calc_phi_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx690tffg1927-2,HLS_INPUT_CLOCK=4.115000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.594000,HLS_SYN_LAT=46,HLS_SYN_TPT=15,HLS_SYN_MEM=2,HLS_SYN_DSP=26,HLS_SYN_FF=5500,HLS_SYN_LUT=11069}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv64_3ED3DBA1734F2478 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011010011110110111010000101110011010011110010010001111000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv19_40000 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_13 : STD_LOGIC_VECTOR (11 downto 0) := "000000010011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv19_7FFFF : STD_LOGIC_VECTOR (18 downto 0) := "1111111111111111111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_const_lv39_33910 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000110011100100010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal p_Val2_2_reg_105 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_pipeline_reg_pp0_iter2_p_Val2_2_reg_105 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal grp_fu_155_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_163 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_tmp_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_fu_186_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal op2_reg_575 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_20_fu_203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_160_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_585 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_reg_590 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal isneg_1_fu_215_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_reg_595 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_5_fu_259_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_600 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_10_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_607 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_297_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_615 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_623 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal tmp_31_fu_325_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_31_reg_631 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_24_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_636 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_345_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_103_reg_640 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_99_fu_349_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_99_reg_645 : STD_LOGIC_VECTOR (18 downto 0);
    signal isneg_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_650 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_2_fu_404_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_655 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_442_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_670 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_678 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_682 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal tmp_28_fu_470_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_28_reg_686 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_22_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_691 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_490_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_102_reg_695 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_98_fu_494_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_98_reg_700 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_3_fu_497_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal p_2_fu_504_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_phiOffSet_fu_150_ap_return : STD_LOGIC_VECTOR (18 downto 0);
    signal offset_V_reg_715 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal tmp_4_reg_720 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_104_fu_527_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_preg : STD_LOGIC := '0';
    signal grp_phiOffSet_fu_150_ap_start : STD_LOGIC;
    signal grp_phiOffSet_fu_150_ap_done : STD_LOGIC;
    signal grp_phiOffSet_fu_150_ap_idle : STD_LOGIC;
    signal grp_phiOffSet_fu_150_ap_ready : STD_LOGIC;
    signal grp_phiOffSet_fu_150_sector_V : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_p_Val2_2_reg_105 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_s_fu_548_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_phi_precharge_reg_pp0_iter2_p_1_reg_140 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_phi_precharge_reg_pp0_iter3_p_1_reg_140 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_1_phi_fu_143_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_grp_phiOffSet_fu_150_ap_start : STD_LOGIC;
    signal grp_fu_155_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal grp_fu_160_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_180_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_1_cast_fu_192_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ireg_V_1_fu_207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_223_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_97_fu_237_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_8_fu_241_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_1_fu_249_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_253_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_95_fu_211_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_7_fu_233_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_273_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_285_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_291_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_101_fu_317_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sh_amt_1_cast1_fu_311_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sh_amt_1_cast_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_336_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_30_fu_340_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal ireg_V_fu_352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_368_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_94_fu_382_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_3_fu_386_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_s_fu_394_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_398_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_92_fu_356_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_2_fu_378_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_418_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_430_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_fu_436_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_100_fu_462_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sh_amt_cast2_fu_456_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sh_amt_cast_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_481_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_27_fu_485_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal grp_fu_555_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_105_fu_534_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_1_fu_543_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_pipeline_idle_pp0 : STD_LOGIC;

    component phiOffSet IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sector_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component calc_phi_hw_dmul_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component calc_phi_hw_sitodeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component calc_phi_hw_am_adfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;



begin
    grp_phiOffSet_fu_150 : component phiOffSet
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phiOffSet_fu_150_ap_start,
        ap_done => grp_phiOffSet_fu_150_ap_done,
        ap_idle => grp_phiOffSet_fu_150_ap_idle,
        ap_ready => grp_phiOffSet_fu_150_ap_ready,
        sector_V => grp_phiOffSet_fu_150_sector_V,
        ap_return => grp_phiOffSet_fu_150_ap_return);

    calc_phi_hw_dmul_dEe_x_U6 : component calc_phi_hw_dmul_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_155_p0,
        din1 => ap_const_lv64_3ED3DBA1734F2478,
        ce => ap_const_logic_1,
        dout => grp_fu_155_p2);

    calc_phi_hw_sitodeOg_x_U7 : component calc_phi_hw_sitodeOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_160_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_160_p1);

    calc_phi_hw_am_adfYi_U8 : component calc_phi_hw_am_adfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 19,
        din1_WIDTH => 19,
        din2_WIDTH => 19,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_pipeline_reg_pp0_iter2_p_Val2_2_reg_105,
        din1 => offset_V_reg_715,
        din2 => grp_fu_555_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_555_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_preg <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter0_preg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and not((ap_const_lv1_0 = tmp_17_reg_611)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_0 = tmp_24_reg_636))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= p_3_fu_497_p3;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and (ap_const_lv1_0 = tmp_17_reg_611) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_25_reg_627)))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= tmp_31_reg_631;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and not((ap_const_lv1_0 = tmp_17_reg_611)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_24_reg_636)))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= tmp_103_reg_640;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_0 = tmp_10_reg_607) and not((ap_const_lv1_0 = tmp_19_reg_623)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= tmp_99_reg_645;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and not((ap_const_lv1_0 = tmp_12_reg_666)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_0 = tmp_22_reg_691))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= p_2_fu_504_p3;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and (ap_const_lv1_0 = tmp_12_reg_666) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_23_reg_682)))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= tmp_28_reg_686;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and not((ap_const_lv1_0 = tmp_12_reg_666)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_22_reg_691)))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= tmp_102_reg_695;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_0 = tmp_5_reg_662) and not((ap_const_lv1_0 = tmp_15_reg_678)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= tmp_98_reg_700;
            elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not((ap_const_lv1_0 = tmp_5_fu_412_p2))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and (ap_const_lv1_0 = tmp_12_reg_666) and (ap_const_lv1_0 = tmp_23_fu_465_p2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and not((ap_const_lv1_0 = tmp_10_fu_267_p2))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and (ap_const_lv1_0 = tmp_17_reg_611) and (ap_const_lv1_0 = tmp_25_fu_320_p2)))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= ap_const_lv19_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
                ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105 <= ap_phi_precharge_reg_pp0_iter0_p_Val2_2_reg_105;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter3_p_1_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = tmp_104_fu_527_p3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
                ap_phi_precharge_reg_pp0_iter3_p_1_reg_140 <= grp_fu_555_p3(38 downto 16);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                ap_phi_precharge_reg_pp0_iter3_p_1_reg_140 <= ap_phi_precharge_reg_pp0_iter2_p_1_reg_140;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                ap_pipeline_reg_pp0_iter1_tmp_reg_566 <= tmp_reg_566;
                tmp_104_reg_727 <= grp_fu_555_p3(38 downto 38);
                tmp_4_reg_720 <= grp_fu_555_p3(38 downto 16);
                tmp_reg_566 <= hwPhi_V(18 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                ap_pipeline_reg_pp0_iter2_p_Val2_2_reg_105 <= p_Val2_2_reg_105;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566))) then
                isneg_1_reg_595 <= ireg_V_1_fu_207_p1(63 downto 63);
                man_V_5_reg_600 <= man_V_5_fu_259_p3;
                tmp_10_reg_607 <= tmp_10_fu_267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                isneg_reg_650 <= ireg_V_fu_352_p1(63 downto 63);
                man_V_2_reg_655 <= man_V_2_fu_404_p3;
                tmp_5_reg_662 <= tmp_5_fu_412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                offset_V_reg_715 <= grp_phiOffSet_fu_150_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not((ap_const_lv1_0 = tmp_fu_167_p3)))) then
                op2_reg_575 <= op2_fu_186_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                p_Val2_2_reg_105 <= ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_105;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (tmp_reg_566 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566))))) then
                reg_163 <= grp_fu_155_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_0 = tmp_10_fu_267_p2))) then
                sh_amt_1_reg_615 <= sh_amt_1_fu_297_p3;
                tmp_17_reg_611 <= tmp_17_fu_279_p2;
                tmp_19_reg_623 <= tmp_19_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_5_fu_412_p2))) then
                sh_amt_reg_670 <= sh_amt_fu_442_p3;
                tmp_12_reg_666 <= tmp_12_fu_424_p2;
                tmp_15_reg_678 <= tmp_15_fu_450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and not((ap_const_lv1_0 = tmp_12_reg_666)) and not((ap_const_lv1_0 = tmp_22_fu_476_p2)))) then
                tmp_102_reg_695 <= tmp_102_fu_490_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and not((ap_const_lv1_0 = tmp_17_reg_611)) and not((ap_const_lv1_0 = tmp_24_fu_331_p2)))) then
                tmp_103_reg_640 <= tmp_103_fu_345_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((tmp_reg_566 = ap_const_lv1_0)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_1_reg_590 <= grp_fu_160_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and not((ap_const_lv1_0 = tmp_12_reg_666)))) then
                tmp_22_reg_691 <= tmp_22_fu_476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and (ap_const_lv1_0 = tmp_12_reg_666))) then
                tmp_23_reg_682 <= tmp_23_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and not((ap_const_lv1_0 = tmp_17_reg_611)))) then
                tmp_24_reg_636 <= tmp_24_fu_331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and (ap_const_lv1_0 = tmp_17_reg_611))) then
                tmp_25_reg_627 <= tmp_25_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_5_reg_662) and (ap_const_lv1_0 = tmp_15_reg_678) and (ap_const_lv1_0 = tmp_12_reg_666) and not((ap_const_lv1_0 = tmp_23_fu_465_p2)))) then
                tmp_28_reg_686 <= tmp_28_fu_470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_10_reg_607) and (ap_const_lv1_0 = tmp_19_reg_623) and (ap_const_lv1_0 = tmp_17_reg_611) and not((ap_const_lv1_0 = tmp_25_fu_320_p2)))) then
                tmp_31_reg_631 <= tmp_31_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not((ap_const_lv1_0 = tmp_104_fu_527_p3)))) then
                tmp_34_reg_731 <= tmp_34_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (tmp_reg_566 = ap_const_lv1_0))) then
                tmp_6_reg_585 <= grp_fu_160_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = tmp_5_reg_662) and not((ap_const_lv1_0 = tmp_15_reg_678)))) then
                tmp_98_reg_700 <= tmp_98_fu_494_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_reg_566) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = tmp_10_reg_607) and not((ap_const_lv1_0 = tmp_19_reg_623)))) then
                tmp_99_reg_645 <= tmp_99_fu_349_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_pipeline_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (not((ap_const_logic_1 = ap_pipeline_idle_pp0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_273_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_7_fu_233_p1));
    F2_fu_418_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_2_fu_378_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7 downto 7);

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_preg)
    begin
        if ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_preg;
        end if; 
    end process;


    ap_grp_phiOffSet_fu_150_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_start = ap_const_logic_0)))) then 
            ap_grp_phiOffSet_fu_150_ap_start <= ap_const_logic_1;
        else 
            ap_grp_phiOffSet_fu_150_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp0_iter0_p_Val2_2_reg_105 <= "XXXXXXXXXXXXXXXXXXX";
    ap_phi_precharge_reg_pp0_iter2_p_1_reg_140 <= "XXXXXXXXXXXXXXXXXXXXXXX";

    ap_pipeline_idle_pp0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_pipeline_idle_pp0 <= ap_const_logic_1;
        else 
            ap_pipeline_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_1_fu_223_p4 <= ireg_V_1_fu_207_p1(62 downto 52);
    exp_tmp_V_fu_368_p4 <= ireg_V_fu_352_p1(62 downto 52);

    grp_fu_155_p0_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_6_reg_585, tmp_1_reg_590, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                grp_fu_155_p0 <= tmp_1_reg_590;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                grp_fu_155_p0 <= tmp_6_reg_585;
            else 
                grp_fu_155_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_155_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_160_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_21_fu_175_p1, tmp_20_fu_203_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_160_p0 <= tmp_20_fu_203_p1;
            elsif ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
                grp_fu_160_p0 <= tmp_21_fu_175_p1;
            else 
                grp_fu_160_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_160_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_555_p2 <= ap_const_lv39_33910(19 - 1 downto 0);

    grp_phiOffSet_fu_150_ap_start_assign_proc : process(ap_grp_phiOffSet_fu_150_ap_start)
    begin
        if ((ap_const_logic_1 = ap_grp_phiOffSet_fu_150_ap_start)) then 
            grp_phiOffSet_fu_150_ap_start <= ap_grp_phiOffSet_fu_150_ap_start;
        else 
            grp_phiOffSet_fu_150_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phiOffSet_fu_150_sector_V <= std_logic_vector(unsigned(lhs_V_1_cast_fu_192_p1) + unsigned(ap_const_lv6_3F));
    hwPhiGlobal_V <= p_1_phi_fu_143_p4;

    hwPhiGlobal_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            hwPhiGlobal_V_ap_vld <= ap_const_logic_1;
        else 
            hwPhiGlobal_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ireg_V_1_fu_207_p1 <= reg_163;
    ireg_V_fu_352_p1 <= reg_163;
    isneg_1_fu_215_p3 <= ireg_V_1_fu_207_p1(63 downto 63);
    isneg_fu_360_p3 <= ireg_V_fu_352_p1(63 downto 63);
    lhs_V_1_cast_fu_192_p1 <= std_logic_vector(resize(unsigned(hwSector_V),6));
    man_V_1_fu_398_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_394_p1));
    man_V_2_fu_404_p3 <= 
        man_V_1_fu_398_p2 when (isneg_fu_360_p3(0) = '1') else 
        p_Result_s_fu_394_p1;
    man_V_4_fu_253_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_1_fu_249_p1));
    man_V_5_fu_259_p3 <= 
        man_V_4_fu_253_p2 when (isneg_1_fu_215_p3(0) = '1') else 
        p_Result_1_fu_249_p1;
    op2_fu_186_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(r_V_fu_180_p2));

    p_1_phi_fu_143_p4_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, tmp_104_reg_727, p_s_fu_548_p3, ap_phi_precharge_reg_pp0_iter3_p_1_reg_140)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((ap_const_lv1_0 = tmp_104_reg_727)))) then 
            p_1_phi_fu_143_p4 <= p_s_fu_548_p3;
        else 
            p_1_phi_fu_143_p4 <= ap_phi_precharge_reg_pp0_iter3_p_1_reg_140;
        end if; 
    end process;

    p_2_fu_504_p3 <= 
        ap_const_lv19_7FFFF when (isneg_reg_650(0) = '1') else 
        ap_const_lv19_0;
    p_3_fu_497_p3 <= 
        ap_const_lv19_7FFFF when (isneg_1_reg_595(0) = '1') else 
        ap_const_lv19_0;
    p_Result_1_fu_249_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_241_p3),54));
    p_Result_s_fu_394_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_386_p3),54));
    p_s_fu_548_p3 <= 
        tmp_4_reg_720 when (tmp_34_reg_731(0) = '1') else 
        ret_V_1_fu_543_p2;
    r_V_fu_180_p2 <= (hwPhi_V xor ap_const_lv19_40000);
    ret_V_1_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv23_1) + unsigned(tmp_4_reg_720));
        sh_amt_1_cast1_fu_311_p1 <= std_logic_vector(resize(signed(sh_amt_1_reg_615),19));

        sh_amt_1_cast_fu_314_p1 <= std_logic_vector(resize(signed(sh_amt_1_reg_615),32));

    sh_amt_1_fu_297_p3 <= 
        tmp_s_fu_285_p2 when (tmp_17_fu_279_p2(0) = '1') else 
        tmp_18_fu_291_p2;
        sh_amt_cast2_fu_456_p1 <= std_logic_vector(resize(signed(sh_amt_reg_670),19));

        sh_amt_cast_fu_459_p1 <= std_logic_vector(resize(signed(sh_amt_reg_670),32));

    sh_amt_fu_442_p3 <= 
        tmp_13_fu_430_p2 when (tmp_12_fu_424_p2(0) = '1') else 
        tmp_14_fu_436_p2;
    tmp_100_fu_462_p1 <= man_V_2_reg_655(19 - 1 downto 0);
    tmp_101_fu_317_p1 <= man_V_5_reg_600(19 - 1 downto 0);
    tmp_102_fu_490_p1 <= tmp_27_fu_485_p2(19 - 1 downto 0);
    tmp_103_fu_345_p1 <= tmp_30_fu_340_p2(19 - 1 downto 0);
    tmp_104_fu_527_p3 <= grp_fu_555_p3(38 downto 38);
    tmp_105_fu_534_p1 <= grp_fu_555_p3(16 - 1 downto 0);
    tmp_10_fu_267_p2 <= "1" when (tmp_95_fu_211_p1 = ap_const_lv63_0) else "0";
    tmp_12_fu_424_p2 <= "1" when (signed(F2_fu_418_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_13_fu_430_p2 <= std_logic_vector(unsigned(F2_fu_418_p2) + unsigned(ap_const_lv12_FF0));
    tmp_14_fu_436_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_418_p2));
    tmp_15_fu_450_p2 <= "1" when (F2_fu_418_p2 = ap_const_lv12_10) else "0";
    tmp_17_fu_279_p2 <= "1" when (signed(F2_1_fu_273_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_18_fu_291_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_1_fu_273_p2));
    tmp_19_fu_305_p2 <= "1" when (F2_1_fu_273_p2 = ap_const_lv12_10) else "0";
        tmp_20_fu_203_p1 <= std_logic_vector(resize(signed(op2_reg_575),32));

        tmp_21_fu_175_p1 <= std_logic_vector(resize(signed(hwPhi_V),32));

    tmp_22_fu_476_p2 <= "1" when (unsigned(sh_amt_reg_670) < unsigned(ap_const_lv12_36)) else "0";
    tmp_23_fu_465_p2 <= "1" when (unsigned(sh_amt_reg_670) < unsigned(ap_const_lv12_13)) else "0";
    tmp_24_fu_331_p2 <= "1" when (unsigned(sh_amt_1_reg_615) < unsigned(ap_const_lv12_36)) else "0";
    tmp_25_fu_320_p2 <= "1" when (unsigned(sh_amt_1_reg_615) < unsigned(ap_const_lv12_13)) else "0";
    tmp_26_fu_481_p1 <= std_logic_vector(resize(unsigned(sh_amt_cast_fu_459_p1),54));
    tmp_27_fu_485_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_655),to_integer(unsigned('0' & tmp_26_fu_481_p1(31-1 downto 0)))));
    tmp_28_fu_470_p2 <= std_logic_vector(shift_left(unsigned(tmp_100_fu_462_p1),to_integer(unsigned('0' & sh_amt_cast2_fu_456_p1(19-1 downto 0)))));
    tmp_29_fu_336_p1 <= std_logic_vector(resize(unsigned(sh_amt_1_cast_fu_314_p1),54));
    tmp_2_fu_378_p1 <= std_logic_vector(resize(unsigned(exp_tmp_V_fu_368_p4),12));
    tmp_30_fu_340_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_600),to_integer(unsigned('0' & tmp_29_fu_336_p1(31-1 downto 0)))));
    tmp_31_fu_325_p2 <= std_logic_vector(shift_left(unsigned(tmp_101_fu_317_p1),to_integer(unsigned('0' & sh_amt_1_cast1_fu_311_p1(19-1 downto 0)))));
    tmp_34_fu_537_p2 <= "1" when (tmp_105_fu_534_p1 = ap_const_lv16_0) else "0";
    tmp_3_fu_386_p3 <= (ap_const_lv1_1 & tmp_94_fu_382_p1);
    tmp_5_fu_412_p2 <= "1" when (tmp_92_fu_356_p1 = ap_const_lv63_0) else "0";
    tmp_7_fu_233_p1 <= std_logic_vector(resize(unsigned(exp_tmp_V_1_fu_223_p4),12));
    tmp_8_fu_241_p3 <= (ap_const_lv1_1 & tmp_97_fu_237_p1);
    tmp_92_fu_356_p1 <= ireg_V_fu_352_p1(63 - 1 downto 0);
    tmp_94_fu_382_p1 <= ireg_V_fu_352_p1(52 - 1 downto 0);
    tmp_95_fu_211_p1 <= ireg_V_1_fu_207_p1(63 - 1 downto 0);
    tmp_97_fu_237_p1 <= ireg_V_1_fu_207_p1(52 - 1 downto 0);
    tmp_98_fu_494_p1 <= man_V_2_reg_655(19 - 1 downto 0);
    tmp_99_fu_349_p1 <= man_V_5_reg_600(19 - 1 downto 0);
    tmp_fu_167_p3 <= hwPhi_V(18 downto 18);
    tmp_s_fu_285_p2 <= std_logic_vector(unsigned(F2_1_fu_273_p2) + unsigned(ap_const_lv12_FF0));
end behav;
