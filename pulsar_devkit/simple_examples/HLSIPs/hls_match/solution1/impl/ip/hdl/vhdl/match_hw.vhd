-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity match_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inTrack_hwRinv_V : IN STD_LOGIC_VECTOR (14 downto 0);
    inTrack_hwPt_V : IN STD_LOGIC_VECTOR (13 downto 0);
    inTrack_hwSinhEta_V : IN STD_LOGIC_VECTOR (13 downto 0);
    inTrack_hwEta_V : IN STD_LOGIC_VECTOR (13 downto 0);
    inTrack_hwPhi_V : IN STD_LOGIC_VECTOR (18 downto 0);
    inTrack_hwPhiGlobal_V : IN STD_LOGIC_VECTOR (22 downto 0);
    inTrack_hwZ0_V : IN STD_LOGIC_VECTOR (10 downto 0);
    inTrack_hwSector_V : IN STD_LOGIC_VECTOR (4 downto 0);
    inTrack_hwQ_V : IN STD_LOGIC_VECTOR (0 downto 0);
    inTrack_hwX2_V : IN STD_LOGIC_VECTOR (9 downto 0);
    inTrack_hwValid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    inTrack_hwBX_V : IN STD_LOGIC_VECTOR (2 downto 0);
    inMuon_hwPt_V : IN STD_LOGIC_VECTOR (8 downto 0);
    inMuon_hwEta_V : IN STD_LOGIC_VECTOR (8 downto 0);
    inMuon_hwPhi_V : IN STD_LOGIC_VECTOR (9 downto 0);
    inMuon_hwQ_V : IN STD_LOGIC_VECTOR (0 downto 0);
    inMuon_hwValid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    inMuon_hwBX_V : IN STD_LOGIC_VECTOR (2 downto 0);
    inMuon_hwQuality_V : IN STD_LOGIC_VECTOR (3 downto 0);
    outTrackMuon_hwPt_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    outTrackMuon_hwPt_V_ap_vld : OUT STD_LOGIC;
    outTrackMuon_hwEta_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    outTrackMuon_hwEta_V_ap_vld : OUT STD_LOGIC;
    outTrackMuon_hwPhi_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    outTrackMuon_hwPhi_V_ap_vld : OUT STD_LOGIC;
    outTrackMuon_hwQ_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    outTrackMuon_hwQ_V_ap_vld : OUT STD_LOGIC;
    outTrackMuon_hwValid_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    outTrackMuon_hwValid_V_ap_vld : OUT STD_LOGIC;
    outTrackMuon_hwBX_V : OUT STD_LOGIC_VECTOR (2 downto 0);
    outTrackMuon_hwBX_V_ap_vld : OUT STD_LOGIC;
    outTrackMuon_hwQuality_V : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of match_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "match_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1927-2,HLS_INPUT_CLOCK=4.115000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.370000,HLS_SYN_LAT=25,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=23,HLS_SYN_FF=2512,HLS_SYN_LUT=2597}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_3F600000972ECF2E : STD_LOGIC_VECTOR (63 downto 0) := "0011111101100000000000000000000010010111001011101100111100101110";
    constant ap_const_lv64_3F8645A1CAC08312 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110000110010001011010000111001010110000001000001100010010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_FF6 : STD_LOGIC_VECTOR (11 downto 0) := "111111110110";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_FFA : STD_LOGIC_VECTOR (11 downto 0) := "111111111010";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal inTrack_hwEta_V_read_reg_942 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_pipeline_reg_pp0_iter1_inTrack_hwEta_V_read_reg_942 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_pipeline_reg_pp0_iter2_inTrack_hwEta_V_read_reg_942 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_pipeline_reg_pp0_iter3_inTrack_hwEta_V_read_reg_942 : STD_LOGIC_VECTOR (13 downto 0);
    signal inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter1_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter2_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter3_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter4_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter5_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter6_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter7_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter8_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter9_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter10_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter11_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter12_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter13_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter14_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter15_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter16_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter17_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter18_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter19_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter20_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter21_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter22_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter23_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_pipeline_reg_pp0_iter24_inMuon_hwEta_V_read_reg_947 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_reg_952 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_i_fu_303_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_i_reg_957 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_reg_972 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_987 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_reg_992 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_257_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_assign_reg_997 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_assign_1_reg_1002 : STD_LOGIC_VECTOR (63 downto 0);
    signal isneg_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter21_isneg_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter22_isneg_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_374_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_15_reg_1013 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter21_tmp_1_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_384_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1024 : STD_LOGIC_VECTOR (11 downto 0);
    signal isneg_1_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter21_isneg_1_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter22_isneg_1_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_419_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_45_reg_1038 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_23_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1043 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter21_tmp_23_reg_1043 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_1_fu_429_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_reg_1049 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_452_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_1057 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_3_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1062 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_474_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_1067 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_487_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_reg_1078 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_pipeline_reg_pp0_iter22_tmp_16_reg_1078 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1084 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_reg_1090 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1095 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_5_fu_531_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_1101 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1106 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_553_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_1111 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1117 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_566_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_46_reg_1122 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter22_tmp_46_reg_1122 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1128 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp31_demorgan_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp31_demorgan_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_cast_fu_593_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_cast_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1150 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1155 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_fu_660_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal newSel1_reg_1160 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_cond2_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_1165 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter23_or_cond2_reg_1165 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_cast_fu_679_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_1_cast_reg_1170 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_reg_1175 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel5_fu_746_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal newSel5_reg_1185 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_cond5_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter23_or_cond5_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_791_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal newSel2_reg_1195 : STD_LOGIC_VECTOR (13 downto 0);
    signal newSel6_fu_823_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal newSel6_reg_1200 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_1_fu_911_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1205 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_41_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_267_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_270_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_i_fu_293_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_42_fu_285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_i_cast_fu_299_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_assign_cast_fu_281_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_311_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_318_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ireg_V_fu_345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_360_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_fu_348_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_6_fu_370_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ireg_V_1_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_405_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_fu_393_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_21_fu_415_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_435_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_s_fu_442_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_446_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_fu_464_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_469_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sel_tmp6_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_514_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_1_fu_521_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_525_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_25_fu_543_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_548_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sel_tmp11_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_601_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_11_fu_605_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp1_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_demorgan_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_610_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp2_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_687_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_32_fu_691_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp9_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_demorgan_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_696_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sel_tmp10_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_772_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_fu_765_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_33_fu_780_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal newSel_fu_784_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_34_fu_804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_807_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_fu_797_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_48_fu_812_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal newSel4_fu_816_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_fu_829_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_38_fu_839_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_fu_845_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_37_fu_835_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_46_cast_fu_853_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_3_fu_857_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_s_6_fu_881_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_fu_863_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_40_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_897_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_873_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_903_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal abscond_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_fu_919_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal abs_fu_929_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_idle_pp0 : STD_LOGIC;
    signal ap_condition_329 : BOOLEAN;

    component match_hw_dmul_64nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component match_hw_sitodp_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component match_hw_mul_10s_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    match_hw_dmul_64nbkb_U1 : component match_hw_dmul_64nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_987,
        din1 => ap_const_lv64_3F600000972ECF2E,
        ce => ap_const_logic_1,
        dout => grp_fu_257_p2);

    match_hw_dmul_64nbkb_U2 : component match_hw_dmul_64nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_20_reg_992,
        din1 => ap_const_lv64_3F8645A1CAC08312,
        ce => ap_const_logic_1,
        dout => grp_fu_262_p2);

    match_hw_sitodp_3cud_U3 : component match_hw_sitodp_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_267_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_267_p1);

    match_hw_sitodp_3cud_U4 : component match_hw_sitodp_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_270_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_270_p1);

    match_hw_mul_10s_dEe_U5 : component match_hw_mul_10s_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 10,
        din1_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_54_i_reg_957,
        din1 => tmp_17_fu_318_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_331_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then
                F2_1_reg_1049 <= F2_1_fu_429_p2;
                F2_reg_1024 <= F2_fu_384_p2;
                ap_pipeline_reg_pp0_iter10_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter9_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter11_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter10_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter12_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter11_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter13_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter12_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter14_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter13_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter15_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter14_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter16_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter15_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter17_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter16_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter18_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter17_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter19_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter18_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter20_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter19_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter21_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter20_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter21_isneg_1_reg_1032 <= isneg_1_reg_1032;
                ap_pipeline_reg_pp0_iter21_isneg_reg_1007 <= isneg_reg_1007;
                ap_pipeline_reg_pp0_iter21_tmp_1_reg_1018 <= tmp_1_reg_1018;
                ap_pipeline_reg_pp0_iter21_tmp_23_reg_1043 <= tmp_23_reg_1043;
                ap_pipeline_reg_pp0_iter22_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter21_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter22_isneg_1_reg_1032 <= ap_pipeline_reg_pp0_iter21_isneg_1_reg_1032;
                ap_pipeline_reg_pp0_iter22_isneg_reg_1007 <= ap_pipeline_reg_pp0_iter21_isneg_reg_1007;
                ap_pipeline_reg_pp0_iter22_tmp_16_reg_1078 <= tmp_16_reg_1078;
                ap_pipeline_reg_pp0_iter22_tmp_46_reg_1122 <= tmp_46_reg_1122;
                ap_pipeline_reg_pp0_iter23_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter22_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter23_or_cond2_reg_1165 <= or_cond2_reg_1165;
                ap_pipeline_reg_pp0_iter23_or_cond5_reg_1190 <= or_cond5_reg_1190;
                ap_pipeline_reg_pp0_iter24_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter23_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter2_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter1_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter2_inTrack_hwEta_V_read_reg_942 <= ap_pipeline_reg_pp0_iter1_inTrack_hwEta_V_read_reg_942;
                ap_pipeline_reg_pp0_iter3_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter2_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter3_inTrack_hwEta_V_read_reg_942 <= ap_pipeline_reg_pp0_iter2_inTrack_hwEta_V_read_reg_942;
                ap_pipeline_reg_pp0_iter4_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter3_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter5_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter4_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter6_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter5_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter7_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter6_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter8_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter7_inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter9_inMuon_hwEta_V_read_reg_947 <= ap_pipeline_reg_pp0_iter8_inMuon_hwEta_V_read_reg_947;
                isneg_1_reg_1032 <= ireg_V_1_fu_390_p1(63 downto 63);
                isneg_reg_1007 <= ireg_V_fu_345_p1(63 downto 63);
                man_V_2_reg_1057 <= man_V_2_fu_452_p3;
                man_V_5_reg_1101 <= man_V_5_fu_531_p3;
                newSel1_reg_1160 <= newSel1_fu_660_p3;
                newSel5_reg_1185 <= newSel5_fu_746_p3;
                or_cond2_reg_1165 <= or_cond2_fu_673_p2;
                or_cond3_reg_1180 <= or_cond3_fu_740_p2;
                or_cond5_reg_1190 <= or_cond5_fu_759_p2;
                or_cond_reg_1155 <= or_cond_fu_654_p2;
                p_1_reg_1205 <= p_1_fu_911_p3;
                sel_tmp12_reg_1139 <= sel_tmp12_fu_587_p2;
                sel_tmp17_reg_1175 <= sel_tmp17_fu_735_p2;
                sel_tmp31_demorgan_reg_1134 <= sel_tmp31_demorgan_fu_576_p2;
                sel_tmp5_reg_1150 <= sel_tmp5_fu_649_p2;
                sel_tmp6_demorgan_reg_1090 <= sel_tmp6_demorgan_fu_497_p2;
                sel_tmp7_reg_1095 <= sel_tmp7_fu_508_p2;
                sh_amt_1_cast_reg_1170 <= sh_amt_1_cast_fu_679_p1;
                sh_amt_1_reg_1111 <= sh_amt_1_fu_553_p3;
                sh_amt_cast_reg_1145 <= sh_amt_cast_fu_593_p1;
                sh_amt_reg_1067 <= sh_amt_fu_474_p3;
                tmp_15_reg_1013 <= tmp_15_fu_374_p1;
                tmp_16_reg_1078 <= tmp_16_fu_487_p1;
                tmp_18_reg_972 <= grp_fu_331_p2;
                tmp_1_reg_1018 <= tmp_1_fu_378_p2;
                tmp_20_reg_992 <= grp_fu_270_p1;
                tmp_23_reg_1043 <= tmp_23_fu_423_p2;
                tmp_24_reg_1106 <= tmp_24_fu_538_p2;
                tmp_27_reg_1117 <= tmp_27_fu_561_p2;
                tmp_29_reg_1128 <= tmp_29_fu_570_p2;
                tmp_3_reg_1062 <= tmp_3_fu_459_p2;
                tmp_45_reg_1038 <= tmp_45_fu_419_p1;
                tmp_46_reg_1122 <= tmp_46_fu_566_p1;
                tmp_8_reg_1073 <= tmp_8_fu_482_p2;
                tmp_reg_987 <= grp_fu_267_p1;
                tmp_s_reg_1084 <= tmp_s_fu_491_p2;
                v_assign_1_reg_1002 <= grp_fu_262_p2;
                v_assign_reg_997 <= grp_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                ap_pipeline_reg_pp0_iter1_inMuon_hwEta_V_read_reg_947 <= inMuon_hwEta_V_read_reg_947;
                ap_pipeline_reg_pp0_iter1_inTrack_hwEta_V_read_reg_942 <= inTrack_hwEta_V_read_reg_942;
                inMuon_hwEta_V_read_reg_947 <= inMuon_hwEta_V;
                inTrack_hwEta_V_read_reg_942 <= inTrack_hwEta_V;
                tmp_36_reg_952 <= inMuon_hwEta_V(8 downto 8);
                tmp_54_i_reg_957 <= tmp_54_i_fu_303_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not((or_cond2_reg_1165 = ap_const_lv1_0)))) then
                newSel2_reg_1195 <= newSel2_fu_791_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not((or_cond5_reg_1190 = ap_const_lv1_0)))) then
                newSel6_reg_1200 <= newSel6_fu_823_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_pipeline_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    F2_1_fu_429_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_21_fu_415_p1));
    F2_fu_384_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_6_fu_370_p1));
    abs_fu_929_p3 <= 
        p_1_reg_1205 when (abscond_fu_924_p2(0) = '1') else 
        neg_fu_919_p2;
    abscond_fu_924_p2 <= "1" when (signed(p_1_reg_1205) > signed(ap_const_lv4_0)) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0 downto 0);

    ap_condition_329_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25)
    begin
                ap_condition_329 <= (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25));
    end process;


    ap_done_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25)
    begin
        if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10) and (ap_const_logic_0 = ap_enable_reg_pp0_iter11) and (ap_const_logic_0 = ap_enable_reg_pp0_iter12) and (ap_const_logic_0 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = ap_enable_reg_pp0_iter14) and (ap_const_logic_0 = ap_enable_reg_pp0_iter15) and (ap_const_logic_0 = ap_enable_reg_pp0_iter16) and (ap_const_logic_0 = ap_enable_reg_pp0_iter17) and (ap_const_logic_0 = ap_enable_reg_pp0_iter18) and (ap_const_logic_0 = ap_enable_reg_pp0_iter19) and (ap_const_logic_0 = ap_enable_reg_pp0_iter20) and (ap_const_logic_0 = ap_enable_reg_pp0_iter21) and (ap_const_logic_0 = ap_enable_reg_pp0_iter22) and (ap_const_logic_0 = ap_enable_reg_pp0_iter23) and (ap_const_logic_0 = ap_enable_reg_pp0_iter24) and (ap_const_logic_0 = ap_enable_reg_pp0_iter25))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_pipeline_idle_pp0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10) and (ap_const_logic_0 = ap_enable_reg_pp0_iter11) and (ap_const_logic_0 = ap_enable_reg_pp0_iter12) and (ap_const_logic_0 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = ap_enable_reg_pp0_iter14) and (ap_const_logic_0 = ap_enable_reg_pp0_iter15) and (ap_const_logic_0 = ap_enable_reg_pp0_iter16) and (ap_const_logic_0 = ap_enable_reg_pp0_iter17) and (ap_const_logic_0 = ap_enable_reg_pp0_iter18) and (ap_const_logic_0 = ap_enable_reg_pp0_iter19) and (ap_const_logic_0 = ap_enable_reg_pp0_iter20) and (ap_const_logic_0 = ap_enable_reg_pp0_iter21) and (ap_const_logic_0 = ap_enable_reg_pp0_iter22) and (ap_const_logic_0 = ap_enable_reg_pp0_iter23) and (ap_const_logic_0 = ap_enable_reg_pp0_iter24))) then 
            ap_pipeline_idle_pp0 <= ap_const_logic_1;
        else 
            ap_pipeline_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_1_fu_405_p4 <= ireg_V_1_fu_390_p1(62 downto 52);
    exp_tmp_V_fu_360_p4 <= ireg_V_fu_345_p1(62 downto 52);
        grp_fu_267_p0 <= std_logic_vector(resize(signed(ap_pipeline_reg_pp0_iter3_inTrack_hwEta_V_read_reg_942),32));

        grp_fu_270_p0 <= std_logic_vector(resize(signed(tmp_18_reg_972),32));

    ireg_V_1_fu_390_p1 <= v_assign_1_reg_1002;
    ireg_V_fu_345_p1 <= v_assign_reg_997;
    man_V_1_fu_446_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_442_p1));
    man_V_2_fu_452_p3 <= 
        man_V_1_fu_446_p2 when (isneg_reg_1007(0) = '1') else 
        p_Result_s_fu_442_p1;
    man_V_4_fu_525_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_1_fu_521_p1));
    man_V_5_fu_531_p3 <= 
        man_V_4_fu_525_p2 when (isneg_1_reg_1032(0) = '1') else 
        p_Result_1_fu_521_p1;
    neg_fu_919_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(p_1_reg_1205));
    newSel1_fu_660_p3 <= 
        tmp_28_fu_610_p1 when (sel_tmp8_fu_624_p2(0) = '1') else 
        tmp_16_reg_1078;
    newSel2_fu_791_p3 <= 
        newSel_fu_784_p3 when (or_cond_reg_1155(0) = '1') else 
        newSel1_reg_1160;
    newSel4_fu_816_p3 <= 
        p_3_fu_797_p3 when (sel_tmp17_reg_1175(0) = '1') else 
        tmp_48_fu_812_p1;
    newSel5_fu_746_p3 <= 
        tmp_47_fu_696_p1 when (sel_tmp13_fu_710_p2(0) = '1') else 
        tmp_46_reg_1122;
    newSel6_fu_823_p3 <= 
        newSel4_fu_816_p3 when (or_cond3_reg_1180(0) = '1') else 
        newSel5_reg_1185;
    newSel_fu_784_p3 <= 
        p_2_fu_765_p3 when (sel_tmp5_reg_1150(0) = '1') else 
        tmp_33_fu_780_p1;
    or_cond1_fu_667_p2 <= (sel_tmp8_fu_624_p2 or sel_tmp2_fu_619_p2);
    or_cond2_fu_673_p2 <= (or_cond_fu_654_p2 or or_cond1_fu_667_p2);
    or_cond3_fu_740_p2 <= (sel_tmp17_fu_735_p2 or sel_tmp15_fu_724_p2);
    or_cond4_fu_753_p2 <= (sel_tmp13_fu_710_p2 or sel_tmp10_fu_705_p2);
    or_cond5_fu_759_p2 <= (or_cond3_fu_740_p2 or or_cond4_fu_753_p2);
    or_cond_fu_654_p2 <= (sel_tmp5_fu_649_p2 or sel_tmp3_fu_638_p2);

    outTrackMuon_hwBX_V_assign_proc : process(inTrack_hwBX_V, tmp_41_fu_936_p2, ap_condition_329)
    begin
        if ((ap_condition_329 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = tmp_41_fu_936_p2))) then 
                outTrackMuon_hwBX_V <= inTrack_hwBX_V;
            elsif ((ap_const_lv1_0 = tmp_41_fu_936_p2)) then 
                outTrackMuon_hwBX_V <= ap_const_lv3_0;
            else 
                outTrackMuon_hwBX_V <= "XXX";
            end if;
        else 
            outTrackMuon_hwBX_V <= "XXX";
        end if; 
    end process;


    outTrackMuon_hwBX_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25, tmp_41_fu_936_p2)
    begin
        if (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and (ap_const_lv1_0 = tmp_41_fu_936_p2)) or (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and not((ap_const_lv1_0 = tmp_41_fu_936_p2))))) then 
            outTrackMuon_hwBX_V_ap_vld <= ap_const_logic_1;
        else 
            outTrackMuon_hwBX_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    outTrackMuon_hwEta_V_assign_proc : process(ap_pipeline_reg_pp0_iter24_inMuon_hwEta_V_read_reg_947, tmp_41_fu_936_p2, ap_condition_329)
    begin
        if ((ap_condition_329 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = tmp_41_fu_936_p2))) then 
                outTrackMuon_hwEta_V <= ap_pipeline_reg_pp0_iter24_inMuon_hwEta_V_read_reg_947;
            elsif ((ap_const_lv1_0 = tmp_41_fu_936_p2)) then 
                outTrackMuon_hwEta_V <= ap_const_lv9_0;
            else 
                outTrackMuon_hwEta_V <= "XXXXXXXXX";
            end if;
        else 
            outTrackMuon_hwEta_V <= "XXXXXXXXX";
        end if; 
    end process;


    outTrackMuon_hwEta_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25, tmp_41_fu_936_p2)
    begin
        if (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and (ap_const_lv1_0 = tmp_41_fu_936_p2)) or (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and not((ap_const_lv1_0 = tmp_41_fu_936_p2))))) then 
            outTrackMuon_hwEta_V_ap_vld <= ap_const_logic_1;
        else 
            outTrackMuon_hwEta_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    outTrackMuon_hwPhi_V_assign_proc : process(inMuon_hwPhi_V, tmp_41_fu_936_p2, ap_condition_329)
    begin
        if ((ap_condition_329 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = tmp_41_fu_936_p2))) then 
                outTrackMuon_hwPhi_V <= inMuon_hwPhi_V;
            elsif ((ap_const_lv1_0 = tmp_41_fu_936_p2)) then 
                outTrackMuon_hwPhi_V <= ap_const_lv10_0;
            else 
                outTrackMuon_hwPhi_V <= "XXXXXXXXXX";
            end if;
        else 
            outTrackMuon_hwPhi_V <= "XXXXXXXXXX";
        end if; 
    end process;


    outTrackMuon_hwPhi_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25, tmp_41_fu_936_p2)
    begin
        if (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and (ap_const_lv1_0 = tmp_41_fu_936_p2)) or (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and not((ap_const_lv1_0 = tmp_41_fu_936_p2))))) then 
            outTrackMuon_hwPhi_V_ap_vld <= ap_const_logic_1;
        else 
            outTrackMuon_hwPhi_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    outTrackMuon_hwPt_V_assign_proc : process(inTrack_hwPt_V, tmp_41_fu_936_p2, ap_condition_329)
    begin
        if ((ap_condition_329 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = tmp_41_fu_936_p2))) then 
                outTrackMuon_hwPt_V <= inTrack_hwPt_V;
            elsif ((ap_const_lv1_0 = tmp_41_fu_936_p2)) then 
                outTrackMuon_hwPt_V <= ap_const_lv14_0;
            else 
                outTrackMuon_hwPt_V <= "XXXXXXXXXXXXXX";
            end if;
        else 
            outTrackMuon_hwPt_V <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    outTrackMuon_hwPt_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25, tmp_41_fu_936_p2)
    begin
        if (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and (ap_const_lv1_0 = tmp_41_fu_936_p2)) or (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and not((ap_const_lv1_0 = tmp_41_fu_936_p2))))) then 
            outTrackMuon_hwPt_V_ap_vld <= ap_const_logic_1;
        else 
            outTrackMuon_hwPt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    outTrackMuon_hwQ_V_assign_proc : process(inTrack_hwQ_V, tmp_41_fu_936_p2, ap_condition_329)
    begin
        if ((ap_condition_329 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = tmp_41_fu_936_p2))) then 
                outTrackMuon_hwQ_V <= inTrack_hwQ_V;
            elsif ((ap_const_lv1_0 = tmp_41_fu_936_p2)) then 
                outTrackMuon_hwQ_V <= ap_const_lv1_0;
            else 
                outTrackMuon_hwQ_V <= "X";
            end if;
        else 
            outTrackMuon_hwQ_V <= "X";
        end if; 
    end process;


    outTrackMuon_hwQ_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25, tmp_41_fu_936_p2)
    begin
        if (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and (ap_const_lv1_0 = tmp_41_fu_936_p2)) or (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and not((ap_const_lv1_0 = tmp_41_fu_936_p2))))) then 
            outTrackMuon_hwQ_V_ap_vld <= ap_const_logic_1;
        else 
            outTrackMuon_hwQ_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    outTrackMuon_hwValid_V_assign_proc : process(tmp_41_fu_936_p2, ap_condition_329)
    begin
        if ((ap_condition_329 = ap_const_boolean_1)) then
            if (not((ap_const_lv1_0 = tmp_41_fu_936_p2))) then 
                outTrackMuon_hwValid_V <= ap_const_lv1_1;
            elsif ((ap_const_lv1_0 = tmp_41_fu_936_p2)) then 
                outTrackMuon_hwValid_V <= ap_const_lv1_0;
            else 
                outTrackMuon_hwValid_V <= "X";
            end if;
        else 
            outTrackMuon_hwValid_V <= "X";
        end if; 
    end process;


    outTrackMuon_hwValid_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter25, tmp_41_fu_936_p2)
    begin
        if (((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and (ap_const_lv1_0 = tmp_41_fu_936_p2)) or (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter25) and not((ap_const_lv1_0 = tmp_41_fu_936_p2))))) then 
            outTrackMuon_hwValid_V_ap_vld <= ap_const_logic_1;
        else 
            outTrackMuon_hwValid_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_911_p3 <= 
        p_s_fu_903_p3 when (tmp_49_fu_873_p3(0) = '1') else 
        ret_V_fu_863_p4;
    p_2_fu_765_p3 <= 
        ap_const_lv14_3FFF when (ap_pipeline_reg_pp0_iter22_isneg_reg_1007(0) = '1') else 
        ap_const_lv14_0;
    p_3_fu_797_p3 <= 
        ap_const_lv10_3FF when (ap_pipeline_reg_pp0_iter22_isneg_1_reg_1032(0) = '1') else 
        ap_const_lv10_0;
    p_Result_1_fu_521_p1 <= std_logic_vector(resize(unsigned(tmp_22_fu_514_p3),54));
    p_Result_s_6_fu_881_p4 <= p_Val2_3_fu_857_p2(9 downto 4);
    p_Result_s_fu_442_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_435_p3),54));
    p_Val2_2_fu_829_p3 <= 
        newSel2_reg_1195 when (ap_pipeline_reg_pp0_iter23_or_cond2_reg_1165(0) = '1') else 
        ap_const_lv14_0;
    p_Val2_3_fu_857_p2 <= std_logic_vector(unsigned(tmp_37_fu_835_p1) - unsigned(tmp_46_cast_fu_853_p1));
    p_s_fu_903_p3 <= 
        ret_V_fu_863_p4 when (tmp_40_fu_891_p2(0) = '1') else 
        ret_V_1_fu_897_p2;
    ret_V_1_fu_897_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ret_V_fu_863_p4));
    ret_V_fu_863_p4 <= p_Val2_3_fu_857_p2(13 downto 10);
    sel_tmp10_fu_705_p2 <= (tmp_27_reg_1117 and sel_tmp9_fu_700_p2);
    sel_tmp11_fu_581_p2 <= (sel_tmp31_demorgan_fu_576_p2 xor ap_const_lv1_1);
    sel_tmp12_fu_587_p2 <= (tmp_24_fu_538_p2 and sel_tmp11_fu_581_p2);
    sel_tmp13_fu_710_p2 <= (sel_tmp12_reg_1139 and tmp_29_reg_1128);
    sel_tmp14_demorgan_fu_628_p2 <= (sel_tmp6_demorgan_reg_1090 or tmp_3_reg_1062);
    sel_tmp14_fu_718_p2 <= (sel_tmp39_demorgan_fu_714_p2 xor ap_const_lv1_1);
    sel_tmp15_fu_724_p2 <= (tmp_30_fu_682_p2 and sel_tmp14_fu_718_p2);
    sel_tmp16_fu_730_p2 <= (tmp_29_reg_1128 xor ap_const_lv1_1);
    sel_tmp17_fu_735_p2 <= (sel_tmp12_reg_1139 and sel_tmp16_fu_730_p2);
    sel_tmp1_fu_614_p2 <= (ap_pipeline_reg_pp0_iter21_tmp_1_reg_1018 xor ap_const_lv1_1);
    sel_tmp2_fu_619_p2 <= (tmp_8_reg_1073 and sel_tmp1_fu_614_p2);
    sel_tmp31_demorgan_fu_576_p2 <= (tmp_23_reg_1043 or tmp_27_fu_561_p2);
    sel_tmp39_demorgan_fu_714_p2 <= (sel_tmp31_demorgan_reg_1134 or tmp_24_reg_1106);
    sel_tmp3_fu_638_p2 <= (tmp_2_fu_596_p2 and sel_tmp_fu_632_p2);
    sel_tmp4_fu_644_p2 <= (tmp_s_reg_1084 xor ap_const_lv1_1);
    sel_tmp5_fu_649_p2 <= (sel_tmp7_reg_1095 and sel_tmp4_fu_644_p2);
    sel_tmp6_demorgan_fu_497_p2 <= (tmp_1_reg_1018 or tmp_8_fu_482_p2);
    sel_tmp6_fu_502_p2 <= (sel_tmp6_demorgan_fu_497_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_508_p2 <= (tmp_3_fu_459_p2 and sel_tmp6_fu_502_p2);
    sel_tmp8_fu_624_p2 <= (sel_tmp7_reg_1095 and tmp_s_reg_1084);
    sel_tmp9_fu_700_p2 <= (ap_pipeline_reg_pp0_iter21_tmp_23_reg_1043 xor ap_const_lv1_1);
    sel_tmp_fu_632_p2 <= (sel_tmp14_demorgan_fu_628_p2 xor ap_const_lv1_1);
        sh_amt_1_cast_fu_679_p1 <= std_logic_vector(resize(signed(sh_amt_1_reg_1111),32));

    sh_amt_1_fu_553_p3 <= 
        tmp_25_fu_543_p2 when (tmp_24_fu_538_p2(0) = '1') else 
        tmp_26_fu_548_p2;
        sh_amt_cast_fu_593_p1 <= std_logic_vector(resize(signed(sh_amt_reg_1067),32));

    sh_amt_fu_474_p3 <= 
        tmp_5_fu_464_p2 when (tmp_3_fu_459_p2(0) = '1') else 
        tmp_7_fu_469_p2;
    tmp_10_fu_601_p1 <= std_logic_vector(resize(unsigned(sh_amt_cast_fu_593_p1),54));
    tmp_11_fu_605_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_1057),to_integer(unsigned('0' & tmp_10_fu_601_p1(31-1 downto 0)))));
        tmp_12_fu_772_p1 <= std_logic_vector(resize(signed(ap_pipeline_reg_pp0_iter22_tmp_16_reg_1078),32));

    tmp_13_fu_775_p2 <= std_logic_vector(shift_left(unsigned(tmp_12_fu_772_p1),to_integer(unsigned('0' & sh_amt_cast_reg_1145(31-1 downto 0)))));
    tmp_14_fu_311_p3 <= (tmp_36_reg_952 & ap_const_lv1_0);
    tmp_15_fu_374_p1 <= ireg_V_fu_345_p1(52 - 1 downto 0);
    tmp_16_fu_487_p1 <= man_V_2_fu_452_p3(14 - 1 downto 0);
    tmp_17_fu_318_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(tmp_14_fu_311_p3));
    tmp_1_fu_378_p2 <= "1" when (tmp_9_fu_348_p1 = ap_const_lv63_0) else "0";
    tmp_21_fu_415_p1 <= std_logic_vector(resize(unsigned(exp_tmp_V_1_fu_405_p4),12));
    tmp_22_fu_514_p3 <= (ap_const_lv1_1 & tmp_45_reg_1038);
    tmp_23_fu_423_p2 <= "1" when (tmp_43_fu_393_p1 = ap_const_lv63_0) else "0";
    tmp_24_fu_538_p2 <= "1" when (signed(F2_1_reg_1049) > signed(ap_const_lv12_6)) else "0";
    tmp_25_fu_543_p2 <= std_logic_vector(signed(ap_const_lv12_FFA) + signed(F2_1_reg_1049));
    tmp_26_fu_548_p2 <= std_logic_vector(unsigned(ap_const_lv12_6) - unsigned(F2_1_reg_1049));
    tmp_27_fu_561_p2 <= "1" when (F2_1_reg_1049 = ap_const_lv12_6) else "0";
    tmp_28_fu_610_p1 <= tmp_11_fu_605_p2(14 - 1 downto 0);
    tmp_29_fu_570_p2 <= "1" when (unsigned(sh_amt_1_fu_553_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_2_fu_596_p2 <= "1" when (unsigned(sh_amt_reg_1067) < unsigned(ap_const_lv12_E)) else "0";
    tmp_30_fu_682_p2 <= "1" when (unsigned(sh_amt_1_reg_1111) < unsigned(ap_const_lv12_A)) else "0";
    tmp_31_fu_687_p1 <= std_logic_vector(resize(unsigned(sh_amt_1_cast_fu_679_p1),54));
    tmp_32_fu_691_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_1101),to_integer(unsigned('0' & tmp_31_fu_687_p1(31-1 downto 0)))));
    tmp_33_fu_780_p1 <= tmp_13_fu_775_p2(14 - 1 downto 0);
        tmp_34_fu_804_p1 <= std_logic_vector(resize(signed(ap_pipeline_reg_pp0_iter22_tmp_46_reg_1122),32));

    tmp_35_fu_807_p2 <= std_logic_vector(shift_left(unsigned(tmp_34_fu_804_p1),to_integer(unsigned('0' & sh_amt_1_cast_reg_1170(31-1 downto 0)))));
    tmp_37_fu_835_p1 <= std_logic_vector(resize(unsigned(p_Val2_2_fu_829_p3),15));
    tmp_38_fu_839_p3 <= 
        newSel6_reg_1200 when (ap_pipeline_reg_pp0_iter23_or_cond5_reg_1190(0) = '1') else 
        ap_const_lv10_0;
    tmp_39_fu_845_p3 <= (tmp_38_fu_839_p3 & ap_const_lv4_0);
    tmp_3_fu_459_p2 <= "1" when (signed(F2_reg_1024) > signed(ap_const_lv12_A)) else "0";
    tmp_40_fu_891_p2 <= "1" when (p_Result_s_6_fu_881_p4 = ap_const_lv6_0) else "0";
    tmp_41_fu_936_p2 <= "1" when (abs_fu_929_p3 = ap_const_lv4_0) else "0";
    tmp_42_fu_285_p3 <= inMuon_hwEta_V(8 downto 8);
    tmp_43_fu_393_p1 <= ireg_V_1_fu_390_p1(63 - 1 downto 0);
    tmp_45_fu_419_p1 <= ireg_V_1_fu_390_p1(52 - 1 downto 0);
        tmp_46_cast_fu_853_p1 <= std_logic_vector(resize(signed(tmp_39_fu_845_p3),15));

    tmp_46_fu_566_p1 <= man_V_5_fu_531_p3(10 - 1 downto 0);
    tmp_47_fu_696_p1 <= tmp_32_fu_691_p2(10 - 1 downto 0);
    tmp_48_fu_812_p1 <= tmp_35_fu_807_p2(10 - 1 downto 0);
    tmp_49_fu_873_p3 <= p_Val2_3_fu_857_p2(13 downto 13);
    tmp_4_fu_435_p3 <= (ap_const_lv1_1 & tmp_15_reg_1013);
    tmp_52_i_fu_293_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(inMuon_hwEta_V));
    tmp_53_i_cast_fu_299_p1 <= std_logic_vector(resize(unsigned(tmp_52_i_fu_293_p2),10));
    tmp_54_i_fu_303_p3 <= 
        tmp_53_i_cast_fu_299_p1 when (tmp_42_fu_285_p3(0) = '1') else 
        x_assign_cast_fu_281_p1;
    tmp_5_fu_464_p2 <= std_logic_vector(signed(ap_const_lv12_FF6) + signed(F2_reg_1024));
    tmp_6_fu_370_p1 <= std_logic_vector(resize(unsigned(exp_tmp_V_fu_360_p4),12));
    tmp_7_fu_469_p2 <= std_logic_vector(unsigned(ap_const_lv12_A) - unsigned(F2_reg_1024));
    tmp_8_fu_482_p2 <= "1" when (F2_reg_1024 = ap_const_lv12_A) else "0";
    tmp_9_fu_348_p1 <= ireg_V_fu_345_p1(63 - 1 downto 0);
    tmp_s_fu_491_p2 <= "1" when (unsigned(sh_amt_fu_474_p3) < unsigned(ap_const_lv12_36)) else "0";
        x_assign_cast_fu_281_p1 <= std_logic_vector(resize(signed(inMuon_hwEta_V),10));

end behav;
