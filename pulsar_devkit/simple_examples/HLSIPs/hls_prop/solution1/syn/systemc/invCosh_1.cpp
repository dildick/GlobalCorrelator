// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "invCosh_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic invCosh_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic invCosh_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> invCosh_1::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> invCosh_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> invCosh_1::ap_const_lv1_1 = "1";
const sc_lv<32> invCosh_1::ap_const_lv32_D = "1101";
const sc_lv<32> invCosh_1::ap_const_lv32_17 = "10111";
const sc_lv<12> invCosh_1::ap_const_lv12_400 = "10000000000";
const sc_lv<32> invCosh_1::ap_const_lv32_A = "1010";
const sc_lv<32> invCosh_1::ap_const_lv32_B = "1011";
const sc_lv<2> invCosh_1::ap_const_lv2_0 = "00";
const sc_lv<3> invCosh_1::ap_const_lv3_0 = "000";
const sc_lv<11> invCosh_1::ap_const_lv11_400 = "10000000000";
const sc_lv<24> invCosh_1::ap_const_lv24_AAB = "101010101011";

invCosh_1::invCosh_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cosh_table7_U = new invCosh_1_cosh_tamb6("cosh_table7_U");
    cosh_table7_U->clk(ap_clk);
    cosh_table7_U->reset(ap_rst);
    cosh_table7_U->address0(cosh_table7_address0);
    cosh_table7_U->ce0(cosh_table7_ce0);
    cosh_table7_U->q0(cosh_table7_q0);
    prop_hw_mul_mul_1ncg_U22 = new prop_hw_mul_mul_1ncg<1,3,13,11,24>("prop_hw_mul_mul_1ncg_U22");
    prop_hw_mul_mul_1ncg_U22->clk(ap_clk);
    prop_hw_mul_mul_1ncg_U22->reset(ap_rst);
    prop_hw_mul_mul_1ncg_U22->din0(grp_fu_125_p0);
    prop_hw_mul_mul_1ncg_U22->din1(grp_fu_125_p1);
    prop_hw_mul_mul_1ncg_U22->ce(ap_var_for_const0);
    prop_hw_mul_mul_1ncg_U22->dout(grp_fu_125_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( cosh_table7_q0 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_icmp_reg_147 );

    SC_METHOD(thread_cosh_table7_address0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_192_fu_113_p1 );

    SC_METHOD(thread_cosh_table7_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_125_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_125_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_fu_125_p10 );

    SC_METHOD(thread_grp_fu_125_p10);
    sensitive << ( tmp_fu_60_p1 );

    SC_METHOD(thread_icmp_fu_96_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_232_fu_86_p4 );

    SC_METHOD(thread_r_V_fu_80_p2);
    sensitive << ( tmp_cast_cast_fu_77_p1 );

    SC_METHOD(thread_tmp_192_fu_113_p1);
    sensitive << ( tmp_s_fu_109_p1 );

    SC_METHOD(thread_tmp_231_fu_102_p3);
    sensitive << ( r_V_reg_142 );

    SC_METHOD(thread_tmp_232_fu_86_p4);
    sensitive << ( r_V_fu_80_p2 );

    SC_METHOD(thread_tmp_cast_cast_fu_77_p1);
    sensitive << ( tmp_230_reg_137 );

    SC_METHOD(thread_tmp_fu_60_p1);
    sensitive << ( data_V_read );

    SC_METHOD(thread_tmp_s_fu_109_p1);
    sensitive << ( tmp_231_fu_102_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "invCosh_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_read, "(port)data_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, cosh_table7_address0, "cosh_table7_address0");
    sc_trace(mVcdFile, cosh_table7_ce0, "cosh_table7_ce0");
    sc_trace(mVcdFile, cosh_table7_q0, "cosh_table7_q0");
    sc_trace(mVcdFile, tmp_230_reg_137, "tmp_230_reg_137");
    sc_trace(mVcdFile, r_V_fu_80_p2, "r_V_fu_80_p2");
    sc_trace(mVcdFile, r_V_reg_142, "r_V_reg_142");
    sc_trace(mVcdFile, icmp_fu_96_p2, "icmp_fu_96_p2");
    sc_trace(mVcdFile, icmp_reg_147, "icmp_reg_147");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_icmp_reg_147, "ap_pipeline_reg_pp0_iter4_icmp_reg_147");
    sc_trace(mVcdFile, tmp_192_fu_113_p1, "tmp_192_fu_113_p1");
    sc_trace(mVcdFile, tmp_fu_60_p1, "tmp_fu_60_p1");
    sc_trace(mVcdFile, grp_fu_125_p2, "grp_fu_125_p2");
    sc_trace(mVcdFile, tmp_cast_cast_fu_77_p1, "tmp_cast_cast_fu_77_p1");
    sc_trace(mVcdFile, tmp_232_fu_86_p4, "tmp_232_fu_86_p4");
    sc_trace(mVcdFile, tmp_231_fu_102_p3, "tmp_231_fu_102_p3");
    sc_trace(mVcdFile, tmp_s_fu_109_p1, "tmp_s_fu_109_p1");
    sc_trace(mVcdFile, grp_fu_125_p0, "grp_fu_125_p0");
    sc_trace(mVcdFile, grp_fu_125_p1, "grp_fu_125_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
    sc_trace(mVcdFile, grp_fu_125_p10, "grp_fu_125_p10");
#endif

    }
}

invCosh_1::~invCosh_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cosh_table7_U;
    delete prop_hw_mul_mul_1ncg_U22;
}

void invCosh_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void invCosh_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ap_pipeline_reg_pp0_iter4_icmp_reg_147 = icmp_reg_147.read();
        icmp_reg_147 = icmp_fu_96_p2.read();
        r_V_reg_142 = r_V_fu_80_p2.read();
        tmp_230_reg_137 = grp_fu_125_p2.read().range(23, 13);
    }
}

void invCosh_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void invCosh_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void invCosh_1::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void invCosh_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void invCosh_1::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void invCosh_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void invCosh_1::thread_ap_return() {
    ap_return = (!ap_pipeline_reg_pp0_iter4_icmp_reg_147.read()[0].is_01())? sc_lv<11>(): ((ap_pipeline_reg_pp0_iter4_icmp_reg_147.read()[0].to_bool())? ap_const_lv11_400: cosh_table7_q0.read());
}

void invCosh_1::thread_cosh_table7_address0() {
    cosh_table7_address0 =  (sc_lv<13>) (tmp_192_fu_113_p1.read());
}

void invCosh_1::thread_cosh_table7_ce0() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        cosh_table7_ce0 = ap_const_logic_1;
    } else {
        cosh_table7_ce0 = ap_const_logic_0;
    }
}

void invCosh_1::thread_grp_fu_125_p0() {
    grp_fu_125_p0 =  (sc_lv<13>) (ap_const_lv24_AAB);
}

void invCosh_1::thread_grp_fu_125_p1() {
    grp_fu_125_p1 =  (sc_lv<11>) (grp_fu_125_p10.read());
}

void invCosh_1::thread_grp_fu_125_p10() {
    grp_fu_125_p10 = esl_zext<24,11>(tmp_fu_60_p1.read());
}

void invCosh_1::thread_icmp_fu_96_p2() {
    icmp_fu_96_p2 = (!tmp_232_fu_86_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_232_fu_86_p4.read() != ap_const_lv2_0);
}

void invCosh_1::thread_r_V_fu_80_p2() {
    r_V_fu_80_p2 = (!ap_const_lv12_400.is_01() || !tmp_cast_cast_fu_77_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_400) - sc_biguint<12>(tmp_cast_cast_fu_77_p1.read()));
}

void invCosh_1::thread_tmp_192_fu_113_p1() {
    tmp_192_fu_113_p1 = esl_zext<64,16>(tmp_s_fu_109_p1.read());
}

void invCosh_1::thread_tmp_231_fu_102_p3() {
    tmp_231_fu_102_p3 = esl_concat<12,3>(r_V_reg_142.read(), ap_const_lv3_0);
}

void invCosh_1::thread_tmp_232_fu_86_p4() {
    tmp_232_fu_86_p4 = r_V_fu_80_p2.read().range(11, 10);
}

void invCosh_1::thread_tmp_cast_cast_fu_77_p1() {
    tmp_cast_cast_fu_77_p1 = esl_zext<12,11>(tmp_230_reg_137.read());
}

void invCosh_1::thread_tmp_fu_60_p1() {
    tmp_fu_60_p1 = data_V_read.read().range(11-1, 0);
}

void invCosh_1::thread_tmp_s_fu_109_p1() {
    tmp_s_fu_109_p1 = esl_sext<16,15>(tmp_231_fu_102_p3.read());
}

void invCosh_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

