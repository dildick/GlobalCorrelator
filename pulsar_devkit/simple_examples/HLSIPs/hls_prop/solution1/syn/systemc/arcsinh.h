// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _arcsinh_HH_
#define _arcsinh_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "prop_hw_mul_mul_1cud.h"
#include "arcsinh_arcsinh_tbkb.h"

namespace ap_rtl {

struct arcsinh : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<14> > data_V_read;
    sc_out< sc_lv<12> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    arcsinh(sc_module_name name);
    SC_HAS_PROCESS(arcsinh);

    ~arcsinh();

    sc_trace_file* mVcdFile;

    arcsinh_arcsinh_tbkb* arcsinh_table10_U;
    prop_hw_mul_mul_1cud<1,3,16,14,30>* prop_hw_mul_mul_1cud_U1;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<13> > arcsinh_table10_address0;
    sc_signal< sc_logic > arcsinh_table10_ce0;
    sc_signal< sc_lv<12> > arcsinh_table10_q0;
    sc_signal< sc_lv<1> > tmp_268_reg_238;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_tmp_268_reg_238;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_tmp_268_reg_238;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter3_tmp_268_reg_238;
    sc_signal< sc_lv<29> > tmp_267_fu_88_p1;
    sc_signal< sc_lv<29> > tmp_267_reg_244;
    sc_signal< sc_lv<13> > tmp_270_reg_249;
    sc_signal< sc_lv<13> > ap_pipeline_reg_pp0_iter3_tmp_270_reg_249;
    sc_signal< sc_lv<12> > tmp_269_reg_254;
    sc_signal< sc_lv<13> > r_V_fu_149_p2;
    sc_signal< sc_lv<13> > r_V_reg_259;
    sc_signal< sc_lv<1> > tmp_273_reg_264;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter5_tmp_273_reg_264;
    sc_signal< sc_lv<3> > tmp_274_reg_270;
    sc_signal< sc_lv<1> > icmp_fu_184_p2;
    sc_signal< sc_lv<1> > icmp_reg_275;
    sc_signal< sc_lv<64> > tmp_202_fu_189_p1;
    sc_signal< sc_lv<30> > grp_fu_225_p2;
    sc_signal< sc_lv<29> > neg_mul_fu_100_p2;
    sc_signal< sc_lv<15> > tmp_fu_115_p1;
    sc_signal< sc_lv<15> > tmp_s_fu_118_p1;
    sc_signal< sc_lv<15> > p_v_fu_121_p3;
    sc_signal< sc_lv<13> > tmp_271_fu_128_p1;
    sc_signal< sc_lv<13> > neg_ti_fu_132_p2;
    sc_signal< sc_lv<13> > tmp_272_fu_138_p1;
    sc_signal< sc_lv<13> > tmp_206_fu_142_p3;
    sc_signal< sc_lv<16> > tmp_204_fu_173_p3;
    sc_signal< sc_lv<32> > index_fu_180_p1;
    sc_signal< sc_lv<1> > sel_tmp1_fu_194_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_199_p2;
    sc_signal< sc_lv<1> > tmp_205_fu_212_p2;
    sc_signal< sc_lv<12> > sel_tmp_fu_204_p3;
    sc_signal< sc_lv<16> > grp_fu_225_p0;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_pipeline_idle_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<29> ap_const_lv29_0;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<13> ap_const_lv13_400;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<12> ap_const_lv12_9F7;
    static const sc_lv<30> ap_const_lv30_5556;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_done();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_pipeline_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_arcsinh_table10_address0();
    void thread_arcsinh_table10_ce0();
    void thread_grp_fu_225_p0();
    void thread_icmp_fu_184_p2();
    void thread_index_fu_180_p1();
    void thread_neg_mul_fu_100_p2();
    void thread_neg_ti_fu_132_p2();
    void thread_p_v_fu_121_p3();
    void thread_r_V_fu_149_p2();
    void thread_sel_tmp1_fu_194_p2();
    void thread_sel_tmp2_fu_199_p2();
    void thread_sel_tmp_fu_204_p3();
    void thread_tmp_202_fu_189_p1();
    void thread_tmp_204_fu_173_p3();
    void thread_tmp_205_fu_212_p2();
    void thread_tmp_206_fu_142_p3();
    void thread_tmp_267_fu_88_p1();
    void thread_tmp_271_fu_128_p1();
    void thread_tmp_272_fu_138_p1();
    void thread_tmp_fu_115_p1();
    void thread_tmp_s_fu_118_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
