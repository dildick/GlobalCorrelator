// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "tanh_LUT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic tanh_LUT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic tanh_LUT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> tanh_LUT::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> tanh_LUT::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> tanh_LUT::ap_const_lv1_1 = "1";
const sc_lv<1> tanh_LUT::ap_const_lv1_0 = "0";
const sc_lv<32> tanh_LUT::ap_const_lv32_C = "1100";
const sc_lv<32> tanh_LUT::ap_const_lv32_10 = "10000";
const sc_lv<32> tanh_LUT::ap_const_lv32_1C = "11100";
const sc_lv<28> tanh_LUT::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> tanh_LUT::ap_const_lv32_1B = "11011";
const sc_lv<13> tanh_LUT::ap_const_lv13_0 = "0000000000000";
const sc_lv<13> tanh_LUT::ap_const_lv13_400 = "10000000000";
const sc_lv<32> tanh_LUT::ap_const_lv32_A = "1010";
const sc_lv<3> tanh_LUT::ap_const_lv3_0 = "000";
const sc_lv<10> tanh_LUT::ap_const_lv10_0 = "0000000000";
const sc_lv<10> tanh_LUT::ap_const_lv10_3FA = "1111111010";
const sc_lv<29> tanh_LUT::ap_const_lv29_5556 = "101010101010110";

tanh_LUT::tanh_LUT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tanh_table2_U = new tanh_LUT_tanh_tabjbC("tanh_table2_U");
    tanh_table2_U->clk(ap_clk);
    tanh_table2_U->reset(ap_rst);
    tanh_table2_U->address0(tanh_table2_address0);
    tanh_table2_U->ce0(tanh_table2_ce0);
    tanh_table2_U->q0(tanh_table2_q0);
    prop_hw_mul_mul_1kbM_U16 = new prop_hw_mul_mul_1kbM<1,3,16,13,29>("prop_hw_mul_mul_1kbM_U16");
    prop_hw_mul_mul_1kbM_U16->clk(ap_clk);
    prop_hw_mul_mul_1kbM_U16->reset(ap_rst);
    prop_hw_mul_mul_1kbM_U16->din0(grp_fu_221_p0);
    prop_hw_mul_mul_1kbM_U16->din1(data_V_read);
    prop_hw_mul_mul_1kbM_U16->ce(ap_var_for_const0);
    prop_hw_mul_mul_1kbM_U16->dout(grp_fu_221_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tanh_table2_q0 );
    sensitive << ( tmp_4_fu_208_p2 );
    sensitive << ( sel_tmp_cast_fu_200_p3 );

    SC_METHOD(thread_grp_fu_221_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_fu_180_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_13_reg_266 );

    SC_METHOD(thread_index_fu_176_p1);
    sensitive << ( tmp_2_fu_169_p3 );

    SC_METHOD(thread_neg_mul_fu_96_p2);
    sensitive << ( tmp_1_reg_240 );

    SC_METHOD(thread_neg_ti_fu_128_p2);
    sensitive << ( tmp_10_fu_124_p1 );

    SC_METHOD(thread_p_v_fu_117_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_6_reg_234 );
    sensitive << ( tmp_fu_111_p1 );
    sensitive << ( tmp_5_fu_114_p1 );

    SC_METHOD(thread_r_V_fu_145_p2);
    sensitive << ( tmp_9_fu_138_p3 );

    SC_METHOD(thread_sel_tmp1_fu_190_p2);
    sensitive << ( ap_pipeline_reg_pp0_iter5_tmp_12_reg_260 );

    SC_METHOD(thread_sel_tmp2_fu_195_p2);
    sensitive << ( icmp_reg_271 );
    sensitive << ( sel_tmp1_fu_190_p2 );

    SC_METHOD(thread_sel_tmp_cast_fu_200_p3);
    sensitive << ( sel_tmp2_fu_195_p2 );

    SC_METHOD(thread_tanh_table2_address0);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_3_fu_185_p1 );

    SC_METHOD(thread_tanh_table2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_tmp_10_fu_124_p1);
    sensitive << ( p_v_fu_117_p3 );

    SC_METHOD(thread_tmp_11_fu_134_p1);
    sensitive << ( p_v_fu_117_p3 );

    SC_METHOD(thread_tmp_1_fu_84_p1);
    sensitive << ( grp_fu_221_p2 );

    SC_METHOD(thread_tmp_2_fu_169_p3);
    sensitive << ( r_V_reg_255 );

    SC_METHOD(thread_tmp_3_fu_185_p1);
    sensitive << ( index_fu_176_p1 );

    SC_METHOD(thread_tmp_4_fu_208_p2);
    sensitive << ( ap_pipeline_reg_pp0_iter5_tmp_12_reg_260 );
    sensitive << ( sel_tmp2_fu_195_p2 );

    SC_METHOD(thread_tmp_5_fu_114_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_8_reg_245 );

    SC_METHOD(thread_tmp_9_fu_138_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_6_reg_234 );
    sensitive << ( neg_ti_fu_128_p2 );
    sensitive << ( tmp_11_fu_134_p1 );

    SC_METHOD(thread_tmp_fu_111_p1);
    sensitive << ( tmp_7_reg_250 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "tanh_LUT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_read, "(port)data_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, tanh_table2_address0, "tanh_table2_address0");
    sc_trace(mVcdFile, tanh_table2_ce0, "tanh_table2_ce0");
    sc_trace(mVcdFile, tanh_table2_q0, "tanh_table2_q0");
    sc_trace(mVcdFile, tmp_6_reg_234, "tmp_6_reg_234");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_reg_234, "ap_pipeline_reg_pp0_iter1_tmp_6_reg_234");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_reg_234, "ap_pipeline_reg_pp0_iter2_tmp_6_reg_234");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_reg_234, "ap_pipeline_reg_pp0_iter3_tmp_6_reg_234");
    sc_trace(mVcdFile, tmp_1_fu_84_p1, "tmp_1_fu_84_p1");
    sc_trace(mVcdFile, tmp_1_reg_240, "tmp_1_reg_240");
    sc_trace(mVcdFile, tmp_8_reg_245, "tmp_8_reg_245");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_8_reg_245, "ap_pipeline_reg_pp0_iter3_tmp_8_reg_245");
    sc_trace(mVcdFile, tmp_7_reg_250, "tmp_7_reg_250");
    sc_trace(mVcdFile, r_V_fu_145_p2, "r_V_fu_145_p2");
    sc_trace(mVcdFile, r_V_reg_255, "r_V_reg_255");
    sc_trace(mVcdFile, tmp_12_reg_260, "tmp_12_reg_260");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_tmp_12_reg_260, "ap_pipeline_reg_pp0_iter5_tmp_12_reg_260");
    sc_trace(mVcdFile, tmp_13_reg_266, "tmp_13_reg_266");
    sc_trace(mVcdFile, icmp_fu_180_p2, "icmp_fu_180_p2");
    sc_trace(mVcdFile, icmp_reg_271, "icmp_reg_271");
    sc_trace(mVcdFile, tmp_3_fu_185_p1, "tmp_3_fu_185_p1");
    sc_trace(mVcdFile, grp_fu_221_p2, "grp_fu_221_p2");
    sc_trace(mVcdFile, neg_mul_fu_96_p2, "neg_mul_fu_96_p2");
    sc_trace(mVcdFile, tmp_fu_111_p1, "tmp_fu_111_p1");
    sc_trace(mVcdFile, tmp_5_fu_114_p1, "tmp_5_fu_114_p1");
    sc_trace(mVcdFile, p_v_fu_117_p3, "p_v_fu_117_p3");
    sc_trace(mVcdFile, tmp_10_fu_124_p1, "tmp_10_fu_124_p1");
    sc_trace(mVcdFile, neg_ti_fu_128_p2, "neg_ti_fu_128_p2");
    sc_trace(mVcdFile, tmp_11_fu_134_p1, "tmp_11_fu_134_p1");
    sc_trace(mVcdFile, tmp_9_fu_138_p3, "tmp_9_fu_138_p3");
    sc_trace(mVcdFile, tmp_2_fu_169_p3, "tmp_2_fu_169_p3");
    sc_trace(mVcdFile, index_fu_176_p1, "index_fu_176_p1");
    sc_trace(mVcdFile, sel_tmp1_fu_190_p2, "sel_tmp1_fu_190_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_195_p2, "sel_tmp2_fu_195_p2");
    sc_trace(mVcdFile, tmp_4_fu_208_p2, "tmp_4_fu_208_p2");
    sc_trace(mVcdFile, sel_tmp_cast_fu_200_p3, "sel_tmp_cast_fu_200_p3");
    sc_trace(mVcdFile, grp_fu_221_p0, "grp_fu_221_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
#endif

    }
}

tanh_LUT::~tanh_LUT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete tanh_table2_U;
    delete prop_hw_mul_mul_1kbM_U16;
}

void tanh_LUT::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void tanh_LUT::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_reg_234 = tmp_6_reg_234.read();
        tmp_6_reg_234 = data_V_read.read().range(12, 12);
    }
    if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_reg_234 = ap_pipeline_reg_pp0_iter1_tmp_6_reg_234.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_reg_234 = ap_pipeline_reg_pp0_iter2_tmp_6_reg_234.read();
        ap_pipeline_reg_pp0_iter3_tmp_8_reg_245 = tmp_8_reg_245.read();
        ap_pipeline_reg_pp0_iter5_tmp_12_reg_260 = tmp_12_reg_260.read();
        icmp_reg_271 = icmp_fu_180_p2.read();
        r_V_reg_255 = r_V_fu_145_p2.read();
        tmp_12_reg_260 = r_V_fu_145_p2.read().range(12, 12);
        tmp_13_reg_266 = r_V_fu_145_p2.read().range(12, 10);
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_tmp_6_reg_234.read(), ap_const_lv1_0))) {
        tmp_1_reg_240 = tmp_1_fu_84_p1.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter2_tmp_6_reg_234.read(), ap_const_lv1_0))) {
        tmp_7_reg_250 = neg_mul_fu_96_p2.read().range(27, 16);
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_tmp_6_reg_234.read(), ap_const_lv1_0))) {
        tmp_8_reg_245 = grp_fu_221_p2.read().range(28, 16);
    }
}

void tanh_LUT::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void tanh_LUT::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void tanh_LUT::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void tanh_LUT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void tanh_LUT::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void tanh_LUT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void tanh_LUT::thread_ap_return() {
    ap_return = (!tmp_4_fu_208_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_4_fu_208_p2.read()[0].to_bool())? sel_tmp_cast_fu_200_p3.read(): tanh_table2_q0.read());
}

void tanh_LUT::thread_grp_fu_221_p0() {
    grp_fu_221_p0 =  (sc_lv<16>) (ap_const_lv29_5556);
}

void tanh_LUT::thread_icmp_fu_180_p2() {
    icmp_fu_180_p2 = (!tmp_13_reg_266.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): (sc_bigint<3>(tmp_13_reg_266.read()) > sc_bigint<3>(ap_const_lv3_0));
}

void tanh_LUT::thread_index_fu_176_p1() {
    index_fu_176_p1 = esl_sext<32,16>(tmp_2_fu_169_p3.read());
}

void tanh_LUT::thread_neg_mul_fu_96_p2() {
    neg_mul_fu_96_p2 = (!ap_const_lv28_0.is_01() || !tmp_1_reg_240.read().is_01())? sc_lv<28>(): (sc_biguint<28>(ap_const_lv28_0) - sc_biguint<28>(tmp_1_reg_240.read()));
}

void tanh_LUT::thread_neg_ti_fu_128_p2() {
    neg_ti_fu_128_p2 = (!ap_const_lv13_0.is_01() || !tmp_10_fu_124_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_0) - sc_biguint<13>(tmp_10_fu_124_p1.read()));
}

void tanh_LUT::thread_p_v_fu_117_p3() {
    p_v_fu_117_p3 = (!ap_pipeline_reg_pp0_iter3_tmp_6_reg_234.read()[0].is_01())? sc_lv<15>(): ((ap_pipeline_reg_pp0_iter3_tmp_6_reg_234.read()[0].to_bool())? tmp_fu_111_p1.read(): tmp_5_fu_114_p1.read());
}

void tanh_LUT::thread_r_V_fu_145_p2() {
    r_V_fu_145_p2 = (!ap_const_lv13_400.is_01() || !tmp_9_fu_138_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_400) - sc_biguint<13>(tmp_9_fu_138_p3.read()));
}

void tanh_LUT::thread_sel_tmp1_fu_190_p2() {
    sel_tmp1_fu_190_p2 = (ap_pipeline_reg_pp0_iter5_tmp_12_reg_260.read() ^ ap_const_lv1_1);
}

void tanh_LUT::thread_sel_tmp2_fu_195_p2() {
    sel_tmp2_fu_195_p2 = (icmp_reg_271.read() & sel_tmp1_fu_190_p2.read());
}

void tanh_LUT::thread_sel_tmp_cast_fu_200_p3() {
    sel_tmp_cast_fu_200_p3 = (!sel_tmp2_fu_195_p2.read()[0].is_01())? sc_lv<10>(): ((sel_tmp2_fu_195_p2.read()[0].to_bool())? ap_const_lv10_0: ap_const_lv10_3FA);
}

void tanh_LUT::thread_tanh_table2_address0() {
    tanh_table2_address0 =  (sc_lv<13>) (tmp_3_fu_185_p1.read());
}

void tanh_LUT::thread_tanh_table2_ce0() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        tanh_table2_ce0 = ap_const_logic_1;
    } else {
        tanh_table2_ce0 = ap_const_logic_0;
    }
}

void tanh_LUT::thread_tmp_10_fu_124_p1() {
    tmp_10_fu_124_p1 = p_v_fu_117_p3.read().range(13-1, 0);
}

void tanh_LUT::thread_tmp_11_fu_134_p1() {
    tmp_11_fu_134_p1 = p_v_fu_117_p3.read().range(13-1, 0);
}

void tanh_LUT::thread_tmp_1_fu_84_p1() {
    tmp_1_fu_84_p1 = grp_fu_221_p2.read().range(28-1, 0);
}

void tanh_LUT::thread_tmp_2_fu_169_p3() {
    tmp_2_fu_169_p3 = esl_concat<13,3>(r_V_reg_255.read(), ap_const_lv3_0);
}

void tanh_LUT::thread_tmp_3_fu_185_p1() {
    tmp_3_fu_185_p1 = esl_zext<64,32>(index_fu_176_p1.read());
}

void tanh_LUT::thread_tmp_4_fu_208_p2() {
    tmp_4_fu_208_p2 = (sel_tmp2_fu_195_p2.read() | ap_pipeline_reg_pp0_iter5_tmp_12_reg_260.read());
}

void tanh_LUT::thread_tmp_5_fu_114_p1() {
    tmp_5_fu_114_p1 = esl_sext<15,13>(ap_pipeline_reg_pp0_iter3_tmp_8_reg_245.read());
}

void tanh_LUT::thread_tmp_9_fu_138_p3() {
    tmp_9_fu_138_p3 = (!ap_pipeline_reg_pp0_iter3_tmp_6_reg_234.read()[0].is_01())? sc_lv<13>(): ((ap_pipeline_reg_pp0_iter3_tmp_6_reg_234.read()[0].to_bool())? neg_ti_fu_128_p2.read(): tmp_11_fu_134_p1.read());
}

void tanh_LUT::thread_tmp_fu_111_p1() {
    tmp_fu_111_p1 = esl_sext<15,12>(tmp_7_reg_250.read());
}

void tanh_LUT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

