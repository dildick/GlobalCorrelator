// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "deta_LUT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic deta_LUT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic deta_LUT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> deta_LUT::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> deta_LUT::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> deta_LUT::ap_const_lv1_1 = "1";
const sc_lv<1> deta_LUT::ap_const_lv1_0 = "0";
const sc_lv<32> deta_LUT::ap_const_lv32_A = "1010";
const sc_lv<32> deta_LUT::ap_const_lv32_F = "1111";
const sc_lv<32> deta_LUT::ap_const_lv32_17 = "10111";
const sc_lv<23> deta_LUT::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> deta_LUT::ap_const_lv32_16 = "10110";
const sc_lv<9> deta_LUT::ap_const_lv9_0 = "000000000";
const sc_lv<9> deta_LUT::ap_const_lv9_40 = "1000000";
const sc_lv<32> deta_LUT::ap_const_lv32_8 = "1000";
const sc_lv<32> deta_LUT::ap_const_lv32_6 = "110";
const sc_lv<4> deta_LUT::ap_const_lv4_0 = "0000";
const sc_lv<3> deta_LUT::ap_const_lv3_0 = "000";
const sc_lv<5> deta_LUT::ap_const_lv5_0 = "00000";
const sc_lv<5> deta_LUT::ap_const_lv5_1B = "11011";
const sc_lv<24> deta_LUT::ap_const_lv24_889 = "100010001001";

deta_LUT::deta_LUT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    deta_table8_U = new deta_LUT_deta_tablbW("deta_table8_U");
    deta_table8_U->clk(ap_clk);
    deta_table8_U->reset(ap_rst);
    deta_table8_U->address0(deta_table8_address0);
    deta_table8_U->ce0(deta_table8_ce0);
    deta_table8_U->q0(deta_table8_q0);
    prop_hw_mul_mul_1g8j_x_U19 = new prop_hw_mul_mul_1g8j<1,3,13,11,24>("prop_hw_mul_mul_1g8j_x_U19");
    prop_hw_mul_mul_1g8j_x_U19->clk(ap_clk);
    prop_hw_mul_mul_1g8j_x_U19->reset(ap_rst);
    prop_hw_mul_mul_1g8j_x_U19->din0(grp_fu_227_p0);
    prop_hw_mul_mul_1g8j_x_U19->din1(data_V_read);
    prop_hw_mul_mul_1g8j_x_U19->ce(ap_var_for_const0);
    prop_hw_mul_mul_1g8j_x_U19->dout(grp_fu_227_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( deta_table8_q0 );
    sensitive << ( tmp_197_fu_214_p2 );
    sensitive << ( sel_tmp_cast_fu_206_p3 );

    SC_METHOD(thread_deta_table8_address0);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_194_fu_191_p1 );

    SC_METHOD(thread_deta_table8_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_227_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_fu_186_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_242_reg_272 );

    SC_METHOD(thread_index_fu_182_p1);
    sensitive << ( tmp_196_fu_175_p3 );

    SC_METHOD(thread_neg_mul_fu_102_p2);
    sensitive << ( tmp_235_reg_246 );

    SC_METHOD(thread_neg_ti_fu_134_p2);
    sensitive << ( tmp_239_fu_130_p1 );

    SC_METHOD(thread_p_v_fu_123_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_236_reg_240 );
    sensitive << ( tmp_fu_117_p1 );
    sensitive << ( tmp_s_fu_120_p1 );

    SC_METHOD(thread_r_V_fu_151_p2);
    sensitive << ( tmp_195_fu_144_p3 );

    SC_METHOD(thread_sel_tmp1_fu_196_p2);
    sensitive << ( ap_pipeline_reg_pp0_iter5_tmp_241_reg_266 );

    SC_METHOD(thread_sel_tmp2_fu_201_p2);
    sensitive << ( icmp_reg_277 );
    sensitive << ( sel_tmp1_fu_196_p2 );

    SC_METHOD(thread_sel_tmp_cast_fu_206_p3);
    sensitive << ( sel_tmp2_fu_201_p2 );

    SC_METHOD(thread_tmp_194_fu_191_p1);
    sensitive << ( index_fu_182_p1 );

    SC_METHOD(thread_tmp_195_fu_144_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_236_reg_240 );
    sensitive << ( neg_ti_fu_134_p2 );
    sensitive << ( tmp_240_fu_140_p1 );

    SC_METHOD(thread_tmp_196_fu_175_p3);
    sensitive << ( r_V_reg_261 );

    SC_METHOD(thread_tmp_197_fu_214_p2);
    sensitive << ( ap_pipeline_reg_pp0_iter5_tmp_241_reg_266 );
    sensitive << ( sel_tmp2_fu_201_p2 );

    SC_METHOD(thread_tmp_235_fu_90_p1);
    sensitive << ( grp_fu_227_p2 );

    SC_METHOD(thread_tmp_239_fu_130_p1);
    sensitive << ( p_v_fu_123_p3 );

    SC_METHOD(thread_tmp_240_fu_140_p1);
    sensitive << ( p_v_fu_123_p3 );

    SC_METHOD(thread_tmp_fu_117_p1);
    sensitive << ( tmp_237_reg_256 );

    SC_METHOD(thread_tmp_s_fu_120_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_238_reg_251 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "deta_LUT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_read, "(port)data_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, deta_table8_address0, "deta_table8_address0");
    sc_trace(mVcdFile, deta_table8_ce0, "deta_table8_ce0");
    sc_trace(mVcdFile, deta_table8_q0, "deta_table8_q0");
    sc_trace(mVcdFile, tmp_236_reg_240, "tmp_236_reg_240");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_236_reg_240, "ap_pipeline_reg_pp0_iter1_tmp_236_reg_240");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_236_reg_240, "ap_pipeline_reg_pp0_iter2_tmp_236_reg_240");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_236_reg_240, "ap_pipeline_reg_pp0_iter3_tmp_236_reg_240");
    sc_trace(mVcdFile, tmp_235_fu_90_p1, "tmp_235_fu_90_p1");
    sc_trace(mVcdFile, tmp_235_reg_246, "tmp_235_reg_246");
    sc_trace(mVcdFile, tmp_238_reg_251, "tmp_238_reg_251");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_238_reg_251, "ap_pipeline_reg_pp0_iter3_tmp_238_reg_251");
    sc_trace(mVcdFile, tmp_237_reg_256, "tmp_237_reg_256");
    sc_trace(mVcdFile, r_V_fu_151_p2, "r_V_fu_151_p2");
    sc_trace(mVcdFile, r_V_reg_261, "r_V_reg_261");
    sc_trace(mVcdFile, tmp_241_reg_266, "tmp_241_reg_266");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_tmp_241_reg_266, "ap_pipeline_reg_pp0_iter5_tmp_241_reg_266");
    sc_trace(mVcdFile, tmp_242_reg_272, "tmp_242_reg_272");
    sc_trace(mVcdFile, icmp_fu_186_p2, "icmp_fu_186_p2");
    sc_trace(mVcdFile, icmp_reg_277, "icmp_reg_277");
    sc_trace(mVcdFile, tmp_194_fu_191_p1, "tmp_194_fu_191_p1");
    sc_trace(mVcdFile, grp_fu_227_p2, "grp_fu_227_p2");
    sc_trace(mVcdFile, neg_mul_fu_102_p2, "neg_mul_fu_102_p2");
    sc_trace(mVcdFile, tmp_fu_117_p1, "tmp_fu_117_p1");
    sc_trace(mVcdFile, tmp_s_fu_120_p1, "tmp_s_fu_120_p1");
    sc_trace(mVcdFile, p_v_fu_123_p3, "p_v_fu_123_p3");
    sc_trace(mVcdFile, tmp_239_fu_130_p1, "tmp_239_fu_130_p1");
    sc_trace(mVcdFile, neg_ti_fu_134_p2, "neg_ti_fu_134_p2");
    sc_trace(mVcdFile, tmp_240_fu_140_p1, "tmp_240_fu_140_p1");
    sc_trace(mVcdFile, tmp_195_fu_144_p3, "tmp_195_fu_144_p3");
    sc_trace(mVcdFile, tmp_196_fu_175_p3, "tmp_196_fu_175_p3");
    sc_trace(mVcdFile, index_fu_182_p1, "index_fu_182_p1");
    sc_trace(mVcdFile, sel_tmp1_fu_196_p2, "sel_tmp1_fu_196_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_201_p2, "sel_tmp2_fu_201_p2");
    sc_trace(mVcdFile, tmp_197_fu_214_p2, "tmp_197_fu_214_p2");
    sc_trace(mVcdFile, sel_tmp_cast_fu_206_p3, "sel_tmp_cast_fu_206_p3");
    sc_trace(mVcdFile, grp_fu_227_p0, "grp_fu_227_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
#endif

    }
}

deta_LUT::~deta_LUT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete deta_table8_U;
    delete prop_hw_mul_mul_1g8j_x_U19;
}

void deta_LUT::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void deta_LUT::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_pipeline_reg_pp0_iter1_tmp_236_reg_240 = tmp_236_reg_240.read();
        tmp_236_reg_240 = data_V_read.read().range(10, 10);
    }
    if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ap_pipeline_reg_pp0_iter2_tmp_236_reg_240 = ap_pipeline_reg_pp0_iter1_tmp_236_reg_240.read();
        ap_pipeline_reg_pp0_iter3_tmp_236_reg_240 = ap_pipeline_reg_pp0_iter2_tmp_236_reg_240.read();
        ap_pipeline_reg_pp0_iter3_tmp_238_reg_251 = tmp_238_reg_251.read();
        ap_pipeline_reg_pp0_iter5_tmp_241_reg_266 = tmp_241_reg_266.read();
        icmp_reg_277 = icmp_fu_186_p2.read();
        r_V_reg_261 = r_V_fu_151_p2.read();
        tmp_241_reg_266 = r_V_fu_151_p2.read().range(8, 8);
        tmp_242_reg_272 = r_V_fu_151_p2.read().range(8, 6);
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_tmp_236_reg_240.read(), ap_const_lv1_0))) {
        tmp_235_reg_246 = tmp_235_fu_90_p1.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter2_tmp_236_reg_240.read(), ap_const_lv1_0))) {
        tmp_237_reg_256 = neg_mul_fu_102_p2.read().range(22, 15);
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_tmp_236_reg_240.read(), ap_const_lv1_0))) {
        tmp_238_reg_251 = grp_fu_227_p2.read().range(23, 15);
    }
}

void deta_LUT::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void deta_LUT::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void deta_LUT::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void deta_LUT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void deta_LUT::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void deta_LUT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void deta_LUT::thread_ap_return() {
    ap_return = (!tmp_197_fu_214_p2.read()[0].is_01())? sc_lv<5>(): ((tmp_197_fu_214_p2.read()[0].to_bool())? sel_tmp_cast_fu_206_p3.read(): deta_table8_q0.read());
}

void deta_LUT::thread_deta_table8_address0() {
    deta_table8_address0 =  (sc_lv<10>) (tmp_194_fu_191_p1.read());
}

void deta_LUT::thread_deta_table8_ce0() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        deta_table8_ce0 = ap_const_logic_1;
    } else {
        deta_table8_ce0 = ap_const_logic_0;
    }
}

void deta_LUT::thread_grp_fu_227_p0() {
    grp_fu_227_p0 =  (sc_lv<13>) (ap_const_lv24_889);
}

void deta_LUT::thread_icmp_fu_186_p2() {
    icmp_fu_186_p2 = (!tmp_242_reg_272.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): (sc_bigint<3>(tmp_242_reg_272.read()) > sc_bigint<3>(ap_const_lv3_0));
}

void deta_LUT::thread_index_fu_182_p1() {
    index_fu_182_p1 = esl_sext<32,13>(tmp_196_fu_175_p3.read());
}

void deta_LUT::thread_neg_mul_fu_102_p2() {
    neg_mul_fu_102_p2 = (!ap_const_lv23_0.is_01() || !tmp_235_reg_246.read().is_01())? sc_lv<23>(): (sc_biguint<23>(ap_const_lv23_0) - sc_biguint<23>(tmp_235_reg_246.read()));
}

void deta_LUT::thread_neg_ti_fu_134_p2() {
    neg_ti_fu_134_p2 = (!ap_const_lv9_0.is_01() || !tmp_239_fu_130_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_biguint<9>(tmp_239_fu_130_p1.read()));
}

void deta_LUT::thread_p_v_fu_123_p3() {
    p_v_fu_123_p3 = (!ap_pipeline_reg_pp0_iter3_tmp_236_reg_240.read()[0].is_01())? sc_lv<12>(): ((ap_pipeline_reg_pp0_iter3_tmp_236_reg_240.read()[0].to_bool())? tmp_fu_117_p1.read(): tmp_s_fu_120_p1.read());
}

void deta_LUT::thread_r_V_fu_151_p2() {
    r_V_fu_151_p2 = (!ap_const_lv9_40.is_01() || !tmp_195_fu_144_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_40) - sc_biguint<9>(tmp_195_fu_144_p3.read()));
}

void deta_LUT::thread_sel_tmp1_fu_196_p2() {
    sel_tmp1_fu_196_p2 = (ap_pipeline_reg_pp0_iter5_tmp_241_reg_266.read() ^ ap_const_lv1_1);
}

void deta_LUT::thread_sel_tmp2_fu_201_p2() {
    sel_tmp2_fu_201_p2 = (icmp_reg_277.read() & sel_tmp1_fu_196_p2.read());
}

void deta_LUT::thread_sel_tmp_cast_fu_206_p3() {
    sel_tmp_cast_fu_206_p3 = (!sel_tmp2_fu_201_p2.read()[0].is_01())? sc_lv<5>(): ((sel_tmp2_fu_201_p2.read()[0].to_bool())? ap_const_lv5_0: ap_const_lv5_1B);
}

void deta_LUT::thread_tmp_194_fu_191_p1() {
    tmp_194_fu_191_p1 = esl_zext<64,32>(index_fu_182_p1.read());
}

void deta_LUT::thread_tmp_195_fu_144_p3() {
    tmp_195_fu_144_p3 = (!ap_pipeline_reg_pp0_iter3_tmp_236_reg_240.read()[0].is_01())? sc_lv<9>(): ((ap_pipeline_reg_pp0_iter3_tmp_236_reg_240.read()[0].to_bool())? neg_ti_fu_134_p2.read(): tmp_240_fu_140_p1.read());
}

void deta_LUT::thread_tmp_196_fu_175_p3() {
    tmp_196_fu_175_p3 = esl_concat<9,4>(r_V_reg_261.read(), ap_const_lv4_0);
}

void deta_LUT::thread_tmp_197_fu_214_p2() {
    tmp_197_fu_214_p2 = (sel_tmp2_fu_201_p2.read() | ap_pipeline_reg_pp0_iter5_tmp_241_reg_266.read());
}

void deta_LUT::thread_tmp_235_fu_90_p1() {
    tmp_235_fu_90_p1 = grp_fu_227_p2.read().range(23-1, 0);
}

void deta_LUT::thread_tmp_239_fu_130_p1() {
    tmp_239_fu_130_p1 = p_v_fu_123_p3.read().range(9-1, 0);
}

void deta_LUT::thread_tmp_240_fu_140_p1() {
    tmp_240_fu_140_p1 = p_v_fu_123_p3.read().range(9-1, 0);
}

void deta_LUT::thread_tmp_fu_117_p1() {
    tmp_fu_117_p1 = esl_sext<12,8>(tmp_237_reg_256.read());
}

void deta_LUT::thread_tmp_s_fu_120_p1() {
    tmp_s_fu_120_p1 = esl_sext<12,9>(ap_pipeline_reg_pp0_iter3_tmp_238_reg_251.read());
}

void deta_LUT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

