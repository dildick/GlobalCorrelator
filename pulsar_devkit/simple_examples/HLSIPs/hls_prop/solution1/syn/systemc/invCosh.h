// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _invCosh_HH_
#define _invCosh_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "prop_hw_mul_mul_1ocq.h"
#include "invCosh_cosh_table1.h"

namespace ap_rtl {

struct invCosh : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > data_V_read;
    sc_out< sc_lv<17> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    invCosh(sc_module_name name);
    SC_HAS_PROCESS(invCosh);

    ~invCosh();

    sc_trace_file* mVcdFile;

    invCosh_cosh_table1* cosh_table1_U;
    prop_hw_mul_mul_1ocq<1,3,14,12,26>* prop_hw_mul_mul_1ocq_U25;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<13> > cosh_table1_address0;
    sc_signal< sc_logic > cosh_table1_ce0;
    sc_signal< sc_lv<17> > cosh_table1_q0;
    sc_signal< sc_lv<12> > tmp_192_reg_169;
    sc_signal< sc_lv<13> > r_V_fu_80_p2;
    sc_signal< sc_lv<13> > r_V_reg_174;
    sc_signal< sc_lv<1> > tmp_233_reg_179;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter4_tmp_233_reg_179;
    sc_signal< sc_lv<1> > icmp_fu_104_p2;
    sc_signal< sc_lv<1> > icmp_reg_185;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter4_icmp_reg_185;
    sc_signal< sc_lv<64> > tmp_191_fu_121_p1;
    sc_signal< sc_lv<26> > grp_fu_157_p2;
    sc_signal< sc_lv<13> > tmp_fu_77_p1;
    sc_signal< sc_lv<3> > tmp_234_fu_94_p4;
    sc_signal< sc_lv<16> > tmp_s_fu_110_p3;
    sc_signal< sc_lv<32> > index_fu_117_p1;
    sc_signal< sc_lv<1> > sel_tmp1_fu_126_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_131_p2;
    sc_signal< sc_lv<1> > tmp_193_fu_144_p2;
    sc_signal< sc_lv<17> > sel_tmp_fu_136_p3;
    sc_signal< sc_lv<14> > grp_fu_157_p0;
    sc_signal< sc_lv<12> > grp_fu_157_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_pipeline_idle_pp0;
    sc_signal< sc_lv<26> > grp_fu_157_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<13> ap_const_lv13_400;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<17> ap_const_lv17_10000;
    static const sc_lv<17> ap_const_lv17_196F;
    static const sc_lv<26> ap_const_lv26_1556;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_done();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_pipeline_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_cosh_table1_address0();
    void thread_cosh_table1_ce0();
    void thread_grp_fu_157_p0();
    void thread_grp_fu_157_p1();
    void thread_grp_fu_157_p10();
    void thread_icmp_fu_104_p2();
    void thread_index_fu_117_p1();
    void thread_r_V_fu_80_p2();
    void thread_sel_tmp1_fu_126_p2();
    void thread_sel_tmp2_fu_131_p2();
    void thread_sel_tmp_fu_136_p3();
    void thread_tmp_191_fu_121_p1();
    void thread_tmp_193_fu_144_p2();
    void thread_tmp_234_fu_94_p4();
    void thread_tmp_fu_77_p1();
    void thread_tmp_s_fu_110_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
