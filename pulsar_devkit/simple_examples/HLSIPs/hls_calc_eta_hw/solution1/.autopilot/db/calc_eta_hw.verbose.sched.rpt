

================================================================
== Vivado HLS Report for 'calc_eta_hw'
================================================================
* Date:           Thu Aug 23 18:07:09 2018

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        hls_calc_eta_hw
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1927-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.11|      3.49|        0.51|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   27|   27|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 28


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 28
* Pipeline: 1
  Pipeline-0: II = 1, D = 28, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
* FSM state operations: 

 <State 1>: 3.21ns
ST_1: hwSinhEta_V_read (7)  [1/1] 0.00ns
:3  %hwSinhEta_V_read = call i14 @_ssdm_op_Read.ap_auto.i14(i14 %hwSinhEta_V)

ST_1: tmp (9)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:410
:5  %tmp = call i1 @_ssdm_op_BitSelect.i1.i14.i32(i14 %hwSinhEta_V_read, i32 13)

ST_1: tmp_18 (12)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:0  %tmp_18 = sext i14 %hwSinhEta_V_read to i32

ST_1: tmp_2 (13)  [6/6] 3.21ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_2 = sitofp i32 %tmp_18 to double

ST_1: r_V (61)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:411
:0  %r_V = xor i14 %hwSinhEta_V_read, -8192


 <State 2>: 3.21ns
ST_2: tmp_2 (13)  [5/6] 3.21ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_2 = sitofp i32 %tmp_18 to double

ST_2: tmp_s (62)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:1  %tmp_s = zext i14 %r_V to i64

ST_2: tmp_3 (63)  [6/6] 3.21ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_3 = sitofp i64 %tmp_s to double


 <State 3>: 3.21ns
ST_3: tmp_2 (13)  [4/6] 3.21ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_2 = sitofp i32 %tmp_18 to double

ST_3: tmp_3 (63)  [5/6] 3.21ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_3 = sitofp i64 %tmp_s to double


 <State 4>: 3.21ns
ST_4: tmp_2 (13)  [3/6] 3.21ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_2 = sitofp i32 %tmp_18 to double

ST_4: tmp_3 (63)  [4/6] 3.21ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_3 = sitofp i64 %tmp_s to double


 <State 5>: 3.21ns
ST_5: tmp_2 (13)  [2/6] 3.21ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_2 = sitofp i32 %tmp_18 to double

ST_5: tmp_3 (63)  [3/6] 3.21ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_3 = sitofp i64 %tmp_s to double


 <State 6>: 3.21ns
ST_6: tmp_2 (13)  [1/6] 3.21ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_2 = sitofp i32 %tmp_18 to double

ST_6: tmp_3 (63)  [2/6] 3.21ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_3 = sitofp i64 %tmp_s to double


 <State 7>: 3.21ns
ST_7: v_assign_1 (14)  [10/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_7: tmp_3 (63)  [1/6] 3.21ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_3 = sitofp i64 %tmp_s to double


 <State 8>: 3.06ns
ST_8: v_assign_1 (14)  [9/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_8: v_assign (64)  [10/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 9>: 3.06ns
ST_9: v_assign_1 (14)  [8/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_9: v_assign (64)  [9/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 10>: 3.06ns
ST_10: v_assign_1 (14)  [7/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_10: v_assign (64)  [8/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 11>: 3.06ns
ST_11: v_assign_1 (14)  [6/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_11: v_assign (64)  [7/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 12>: 3.06ns
ST_12: v_assign_1 (14)  [5/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_12: v_assign (64)  [6/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 13>: 3.06ns
ST_13: v_assign_1 (14)  [4/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_13: v_assign (64)  [5/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 14>: 3.06ns
ST_14: v_assign_1 (14)  [3/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_14: v_assign (64)  [4/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 15>: 3.06ns
ST_15: v_assign_1 (14)  [2/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_15: v_assign (64)  [3/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 16>: 3.06ns
ST_16: v_assign_1 (14)  [1/10] 3.06ns  loc: src/tk-mu_simple.cpp:414
:2  %v_assign_1 = fmul double %tmp_2, 0x3F600000972ECF2E

ST_16: v_assign (64)  [2/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 17>: 3.37ns
ST_17: ireg_V_1 (15)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:3  %ireg_V_1 = bitcast double %v_assign_1 to i64

ST_17: tmp_23 (16)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:4  %tmp_23 = trunc i64 %ireg_V_1 to i63

ST_17: isneg_1 (17)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:5  %isneg_1 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)

ST_17: exp_tmp_V_1 (18)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:6  %exp_tmp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1, i32 52, i32 62)

ST_17: tmp_7 (19)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:7  %tmp_7 = zext i11 %exp_tmp_V_1 to i12

ST_17: tmp_31 (20)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:8  %tmp_31 = trunc i64 %ireg_V_1 to i52

ST_17: tmp_5 (21)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:9  %tmp_5 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_31)

ST_17: p_Result_1 (22)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:10  %p_Result_1 = zext i53 %tmp_5 to i54

ST_17: man_V_4 (23)  [1/1] 1.99ns  loc: src/tk-mu_simple.cpp:414
:11  %man_V_4 = sub i54 0, %p_Result_1

ST_17: man_V_5 (24)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:414
:12  %man_V_5 = select i1 %isneg_1, i54 %man_V_4, i54 %p_Result_1

ST_17: tmp_9 (25)  [1/1] 1.60ns  loc: src/tk-mu_simple.cpp:414
:13  %tmp_9 = icmp eq i63 %tmp_23, 0

ST_17: StgValue_76 (26)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:414
:14  br i1 %tmp_9, label %ap_fixed_base.exit, label %11

ST_17: F2_1 (28)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:414
:0  %F2_1 = sub i12 1075, %tmp_7

ST_17: tmp_13 (29)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_13 = icmp sgt i12 %F2_1, 10

ST_17: tmp_14 (30)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:414
:2  %tmp_14 = add i12 %F2_1, -10

ST_17: tmp_15 (31)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:414
:3  %tmp_15 = sub i12 10, %F2_1

ST_17: sh_amt_1 (32)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:414
:4  %sh_amt_1 = select i1 %tmp_13, i12 %tmp_14, i12 %tmp_15

ST_17: tmp_16 (35)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:414
:7  %tmp_16 = icmp eq i12 %F2_1, 10

ST_17: StgValue_83 (36)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:8  br i1 %tmp_16, label %12, label %13

ST_17: StgValue_84 (38)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:0  br i1 %tmp_13, label %14, label %17

ST_17: v_assign (64)  [1/10] 3.06ns  loc: src/tk-mu_simple.cpp:411
:3  %v_assign = fmul double %tmp_3, 0x3F600000972ECF2E


 <State 18>: 3.37ns
ST_18: sh_amt_1_cast1 (33)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:5  %sh_amt_1_cast1 = sext i12 %sh_amt_1 to i14

ST_18: sh_amt_1_cast (34)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:6  %sh_amt_1_cast = sext i12 %sh_amt_1 to i32

ST_18: tmp_37 (40)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:0  %tmp_37 = trunc i54 %man_V_5 to i14

ST_18: tmp_24 (41)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_24 = icmp ult i12 %sh_amt_1, 14

ST_18: StgValue_90 (42)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:414
:2  br i1 %tmp_24, label %18, label %ap_fixed_base.exit

ST_18: tmp_30 (44)  [1/1] 1.98ns  loc: src/tk-mu_simple.cpp:414
:0  %tmp_30 = shl i14 %tmp_37, %sh_amt_1_cast1

ST_18: tmp_22 (47)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:414
:0  %tmp_22 = icmp ult i12 %sh_amt_1, 54

ST_18: StgValue_93 (48)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:1  br i1 %tmp_22, label %15, label %16

ST_18: tmp_28 (53)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:0  %tmp_28 = zext i32 %sh_amt_1_cast to i54

ST_18: tmp_29 (54)  [1/1] 2.57ns  loc: src/tk-mu_simple.cpp:414
:1  %tmp_29 = ashr i54 %man_V_5, %tmp_28

ST_18: tmp_39 (55)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:2  %tmp_39 = trunc i54 %tmp_29 to i14

ST_18: tmp_34 (58)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:414
:0  %tmp_34 = trunc i54 %man_V_5 to i14

ST_18: ireg_V (65)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:4  %ireg_V = bitcast double %v_assign to i64

ST_18: tmp_17 (66)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:5  %tmp_17 = trunc i64 %ireg_V to i63

ST_18: isneg (67)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:6  %isneg = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)

ST_18: exp_tmp_V (68)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:7  %exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)

ST_18: tmp_6 (69)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:8  %tmp_6 = zext i11 %exp_tmp_V to i12

ST_18: tmp_20 (70)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:9  %tmp_20 = trunc i64 %ireg_V to i52

ST_18: tmp_4 (71)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:10  %tmp_4 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_20)

ST_18: p_Result_s (72)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:11  %p_Result_s = zext i53 %tmp_4 to i54

ST_18: man_V_1 (73)  [1/1] 1.99ns  loc: src/tk-mu_simple.cpp:411
:12  %man_V_1 = sub i54 0, %p_Result_s

ST_18: man_V_2 (74)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:411
:13  %man_V_2 = select i1 %isneg, i54 %man_V_1, i54 %p_Result_s

ST_18: tmp_1 (75)  [1/1] 1.60ns  loc: src/tk-mu_simple.cpp:411
:14  %tmp_1 = icmp eq i63 %tmp_17, 0

ST_18: StgValue_109 (76)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:411
:15  br i1 %tmp_1, label %ap_fixed_base.exit, label %2

ST_18: F2 (78)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:411
:0  %F2 = sub i12 1075, %tmp_6

ST_18: tmp_8 (79)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:411
:1  %tmp_8 = icmp sgt i12 %F2, 10

ST_18: tmp_10 (80)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_10 = add i12 %F2, -10

ST_18: tmp_11 (81)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:411
:3  %tmp_11 = sub i12 10, %F2

ST_18: sh_amt (82)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:411
:4  %sh_amt = select i1 %tmp_8, i12 %tmp_10, i12 %tmp_11

ST_18: tmp_12 (85)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:411
:7  %tmp_12 = icmp eq i12 %F2, 10

ST_18: StgValue_116 (86)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:8  br i1 %tmp_12, label %3, label %4

ST_18: StgValue_117 (88)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:0  br i1 %tmp_8, label %5, label %8


 <State 19>: 3.18ns
ST_19: StgValue_118 (45)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:414
:1  br label %ap_fixed_base.exit

ST_19: p_3 (50)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:414
:0  %p_3 = select i1 %isneg_1, i14 -1, i14 0

ST_19: StgValue_120 (51)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:414
:1  br label %ap_fixed_base.exit

ST_19: StgValue_121 (56)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:414
:3  br label %ap_fixed_base.exit

ST_19: StgValue_122 (59)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:414
:1  br label %ap_fixed_base.exit

ST_19: sh_amt_cast2 (83)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:5  %sh_amt_cast2 = sext i12 %sh_amt to i14

ST_19: sh_amt_cast (84)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:6  %sh_amt_cast = sext i12 %sh_amt to i32

ST_19: tmp_36 (90)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:0  %tmp_36 = trunc i54 %man_V_2 to i14

ST_19: tmp_21 (91)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:411
:1  %tmp_21 = icmp ult i12 %sh_amt, 14

ST_19: StgValue_127 (92)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:411
:2  br i1 %tmp_21, label %9, label %ap_fixed_base.exit

ST_19: tmp_27 (94)  [1/1] 1.98ns  loc: src/tk-mu_simple.cpp:411
:0  %tmp_27 = shl i14 %tmp_36, %sh_amt_cast2

ST_19: StgValue_129 (95)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:411
:1  br label %ap_fixed_base.exit

ST_19: tmp_19 (97)  [1/1] 1.25ns  loc: src/tk-mu_simple.cpp:411
:0  %tmp_19 = icmp ult i12 %sh_amt, 54

ST_19: StgValue_131 (98)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:1  br i1 %tmp_19, label %6, label %7

ST_19: p_2 (100)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:411
:0  %p_2 = select i1 %isneg, i14 -1, i14 0

ST_19: StgValue_133 (101)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:411
:1  br label %ap_fixed_base.exit

ST_19: tmp_25 (103)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:0  %tmp_25 = zext i32 %sh_amt_cast to i54

ST_19: tmp_26 (104)  [1/1] 2.57ns  loc: src/tk-mu_simple.cpp:411
:1  %tmp_26 = ashr i54 %man_V_2, %tmp_25

ST_19: tmp_38 (105)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:2  %tmp_38 = trunc i54 %tmp_26 to i14

ST_19: tmp_33 (108)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
:0  %tmp_33 = trunc i54 %man_V_2 to i14

ST_19: StgValue_138 (109)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:411
:1  br label %ap_fixed_base.exit


 <State 20>: 1.20ns
ST_20: StgValue_139 (106)  [1/1] 1.20ns  loc: src/tk-mu_simple.cpp:411
:3  br label %ap_fixed_base.exit

ST_20: absSinhEta_V (111)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:411
ap_fixed_base.exit:0  %absSinhEta_V = phi i14 [ 0, %1 ], [ %tmp_33, %3 ], [ %tmp_38, %6 ], [ %tmp_27, %9 ], [ 0, %8 ], [ %p_2, %7 ], [ 0, %10 ], [ %tmp_34, %12 ], [ %tmp_39, %15 ], [ %tmp_30, %18 ], [ 0, %17 ], [ %p_3, %16 ]

ST_20: inhwEta_V (112)  [7/7] 0.00ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 21>: 3.49ns
ST_21: inhwEta_V (112)  [6/7] 3.49ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 22>: 3.49ns
ST_22: inhwEta_V (112)  [5/7] 3.49ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 23>: 3.49ns
ST_23: inhwEta_V (112)  [4/7] 3.49ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 24>: 3.49ns
ST_24: inhwEta_V (112)  [3/7] 3.49ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 25>: 3.49ns
ST_25: inhwEta_V (112)  [2/7] 3.49ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 26>: 3.10ns
ST_26: inhwEta_V (112)  [1/7] 3.10ns  loc: src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416
ap_fixed_base.exit:1  %inhwEta_V = call fastcc i12 @arcsinh(i14 %absSinhEta_V)


 <State 27>: 2.93ns
ST_27: StgValue_148 (10)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:410
:6  br i1 %tmp, label %1, label %10

ST_27: inhwEta_V_2_cast (113)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:416
ap_fixed_base.exit:2  %inhwEta_V_2_cast = zext i12 %inhwEta_V to i13

ST_27: inhwEta_V_1 (114)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:418
ap_fixed_base.exit:3  %inhwEta_V_1 = sub i13 0, %inhwEta_V_2_cast

ST_27: p_Val2_4_call_ret (115)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:418
ap_fixed_base.exit:4  %p_Val2_4_call_ret = select i1 %tmp, i13 %inhwEta_V_1, i13 %inhwEta_V_2_cast

ST_27: tmp_40 (116)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:420
ap_fixed_base.exit:5  %tmp_40 = call i12 @_ssdm_op_PartSelect.i12.i13.i32.i32(i13 %p_Val2_4_call_ret, i32 1, i32 12)

ST_27: ret_V_cast (117)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:420
ap_fixed_base.exit:6  %ret_V_cast = sext i12 %tmp_40 to i14

ST_27: tmp_41 (118)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:420
ap_fixed_base.exit:7  %tmp_41 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %p_Val2_4_call_ret, i32 12)

ST_27: StgValue_155 (119)  [1/1] 0.89ns  loc: src/tk-mu_simple.cpp:420
ap_fixed_base.exit:8  br i1 %tmp_41, label %19, label %_ZN6ap_intILi14EEC1ILi46ELi36ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit

ST_27: tmp_42 (121)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:418
:0  %tmp_42 = trunc i13 %p_Val2_4_call_ret to i1


 <State 28>: 2.93ns
ST_28: StgValue_157 (4)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i14 %hwSinhEta_V), !map !383

ST_28: StgValue_158 (5)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i14* %outEta_V), !map !389

ST_28: StgValue_159 (6)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @calc_eta_hw_str) nounwind

ST_28: StgValue_160 (8)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:406
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_28: p_Result_s_12 (122)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:420
:1  %p_Result_s_12 = call i10 @_ssdm_op_BitConcatenate.i10.i1.i9(i1 %tmp_42, i9 0)

ST_28: tmp_32 (123)  [1/1] 1.23ns  loc: src/tk-mu_simple.cpp:420
:2  %tmp_32 = icmp eq i10 %p_Result_s_12, 0

ST_28: ret_V (124)  [1/1] 1.33ns  loc: src/tk-mu_simple.cpp:420
:3  %ret_V = add i14 1, %ret_V_cast

ST_28: p_s (125)  [1/1] 0.71ns  loc: src/tk-mu_simple.cpp:420
:4  %p_s = select i1 %tmp_32, i14 %ret_V_cast, i14 %ret_V

ST_28: StgValue_165 (126)  [1/1] 0.89ns  loc: src/tk-mu_simple.cpp:420
:5  br label %_ZN6ap_intILi14EEC1ILi46ELi36ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit

ST_28: p_1 (128)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:420
_ZN6ap_intILi14EEC1ILi46ELi36ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit:0  %p_1 = phi i14 [ %p_s, %19 ], [ %ret_V_cast, %ap_fixed_base.exit ]

ST_28: StgValue_167 (129)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:420
_ZN6ap_intILi14EEC1ILi46ELi36ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit:1  call void @_ssdm_op_Write.ap_auto.i14P(i14* %outEta_V, i14 %p_1)

ST_28: StgValue_168 (130)  [1/1] 0.00ns  loc: src/tk-mu_simple.cpp:421
_ZN6ap_intILi14EEC1ILi46ELi36ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit:2  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.11ns, clock uncertainty: 0.514ns.

 <State 1>: 3.21ns
The critical path consists of the following:
	wire read on port 'hwSinhEta_V' [7]  (0 ns)
	'sitodp' operation ('tmp_2', src/tk-mu_simple.cpp:414) [13]  (3.21 ns)

 <State 2>: 3.21ns
The critical path consists of the following:
	'sitodp' operation ('tmp_2', src/tk-mu_simple.cpp:414) [13]  (3.21 ns)

 <State 3>: 3.21ns
The critical path consists of the following:
	'sitodp' operation ('tmp_2', src/tk-mu_simple.cpp:414) [13]  (3.21 ns)

 <State 4>: 3.21ns
The critical path consists of the following:
	'sitodp' operation ('tmp_2', src/tk-mu_simple.cpp:414) [13]  (3.21 ns)

 <State 5>: 3.21ns
The critical path consists of the following:
	'sitodp' operation ('tmp_2', src/tk-mu_simple.cpp:414) [13]  (3.21 ns)

 <State 6>: 3.21ns
The critical path consists of the following:
	'sitodp' operation ('tmp_2', src/tk-mu_simple.cpp:414) [13]  (3.21 ns)

 <State 7>: 3.21ns
The critical path consists of the following:
	'sitodp' operation ('tmp_3', src/tk-mu_simple.cpp:411) [63]  (3.21 ns)

 <State 8>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 9>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 10>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 11>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 12>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 13>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 14>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 15>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 16>: 3.06ns
The critical path consists of the following:
	'dmul' operation ('v', src/tk-mu_simple.cpp:414) [14]  (3.06 ns)

 <State 17>: 3.37ns
The critical path consists of the following:
	'sub' operation ('F2', src/tk-mu_simple.cpp:414) [28]  (1.33 ns)
	'add' operation ('tmp_14', src/tk-mu_simple.cpp:414) [30]  (1.33 ns)
	'select' operation ('sh_amt', src/tk-mu_simple.cpp:414) [32]  (0.71 ns)

 <State 18>: 3.37ns
The critical path consists of the following:
	'sub' operation ('F2', src/tk-mu_simple.cpp:411) [78]  (1.33 ns)
	'add' operation ('tmp_10', src/tk-mu_simple.cpp:411) [80]  (1.33 ns)
	'select' operation ('sh_amt', src/tk-mu_simple.cpp:411) [82]  (0.71 ns)

 <State 19>: 3.18ns
The critical path consists of the following:
	'shl' operation ('tmp_27', src/tk-mu_simple.cpp:411) [94]  (1.98 ns)
	multiplexor before 'phi' operation ('absSinhEta.V', src/tk-mu_simple.cpp:411) with incoming values : ('tmp_30', src/tk-mu_simple.cpp:414) ('p_3', src/tk-mu_simple.cpp:414) ('tmp_39', src/tk-mu_simple.cpp:414) ('tmp_34', src/tk-mu_simple.cpp:414) ('tmp_27', src/tk-mu_simple.cpp:411) ('p_2', src/tk-mu_simple.cpp:411) ('tmp_38', src/tk-mu_simple.cpp:411) ('tmp_33', src/tk-mu_simple.cpp:411) [111]  (1.2 ns)

 <State 20>: 1.2ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('absSinhEta.V', src/tk-mu_simple.cpp:411) with incoming values : ('tmp_30', src/tk-mu_simple.cpp:414) ('p_3', src/tk-mu_simple.cpp:414) ('tmp_39', src/tk-mu_simple.cpp:414) ('tmp_34', src/tk-mu_simple.cpp:414) ('tmp_27', src/tk-mu_simple.cpp:411) ('p_2', src/tk-mu_simple.cpp:411) ('tmp_38', src/tk-mu_simple.cpp:411) ('tmp_33', src/tk-mu_simple.cpp:411) [111]  (1.2 ns)

 <State 21>: 3.49ns
The critical path consists of the following:
	'call' operation ('inhwEta_V', src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416) to 'arcsinh' [112]  (3.49 ns)

 <State 22>: 3.49ns
The critical path consists of the following:
	'call' operation ('inhwEta_V', src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416) to 'arcsinh' [112]  (3.49 ns)

 <State 23>: 3.49ns
The critical path consists of the following:
	'call' operation ('inhwEta_V', src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416) to 'arcsinh' [112]  (3.49 ns)

 <State 24>: 3.49ns
The critical path consists of the following:
	'call' operation ('inhwEta_V', src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416) to 'arcsinh' [112]  (3.49 ns)

 <State 25>: 3.49ns
The critical path consists of the following:
	'call' operation ('inhwEta_V', src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416) to 'arcsinh' [112]  (3.49 ns)

 <State 26>: 3.1ns
The critical path consists of the following:
	'call' operation ('inhwEta_V', src/tk-mu_simple.h:396->src/tk-mu_simple.cpp:416) to 'arcsinh' [112]  (3.1 ns)

 <State 27>: 2.93ns
The critical path consists of the following:
	'sub' operation ('inhwEta.V', src/tk-mu_simple.cpp:418) [114]  (1.33 ns)
	'select' operation ('p_Val2_4_call_ret', src/tk-mu_simple.cpp:418) [115]  (0.71 ns)
	multiplexor before 'phi' operation ('p_1', src/tk-mu_simple.cpp:420) with incoming values : ('ret_V_cast', src/tk-mu_simple.cpp:420) ('p_s', src/tk-mu_simple.cpp:420) [128]  (0.892 ns)

 <State 28>: 2.93ns
The critical path consists of the following:
	'add' operation ('ret.V', src/tk-mu_simple.cpp:420) [124]  (1.33 ns)
	'select' operation ('p_s', src/tk-mu_simple.cpp:420) [125]  (0.71 ns)
	multiplexor before 'phi' operation ('p_1', src/tk-mu_simple.cpp:420) with incoming values : ('ret_V_cast', src/tk-mu_simple.cpp:420) ('p_s', src/tk-mu_simple.cpp:420) [128]  (0.892 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
