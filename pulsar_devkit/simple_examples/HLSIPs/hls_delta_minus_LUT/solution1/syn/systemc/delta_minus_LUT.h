// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _delta_minus_LUT_HH_
#define _delta_minus_LUT_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "delta_minus_LUT_mcud.h"
#include "delta_minus_LUT_dbkb.h"

namespace ap_rtl {

struct delta_minus_LUT : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<11> > data_V;
    sc_out< sc_lv<14> > res_V;
    sc_out< sc_logic > res_V_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    delta_minus_LUT(sc_module_name name);
    SC_HAS_PROCESS(delta_minus_LUT);

    ~delta_minus_LUT();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    delta_minus_LUT_dbkb* delta_minus_table1_U;
    delta_minus_LUT_mcud<1,3,13,11,24>* delta_minus_LUT_mcud_U1;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<10> > delta_minus_table1_address0;
    sc_signal< sc_logic > delta_minus_table1_ce0;
    sc_signal< sc_lv<5> > delta_minus_table1_q0;
    sc_signal< sc_lv<1> > tmp_6_reg_262;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_tmp_6_reg_262;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_tmp_6_reg_262;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter3_tmp_6_reg_262;
    sc_signal< sc_lv<23> > tmp_1_fu_107_p1;
    sc_signal< sc_lv<23> > tmp_1_reg_268;
    sc_signal< sc_lv<9> > tmp_8_reg_273;
    sc_signal< sc_lv<9> > ap_pipeline_reg_pp0_iter3_tmp_8_reg_273;
    sc_signal< sc_lv<8> > tmp_7_reg_278;
    sc_signal< sc_lv<9> > r_V_fu_168_p2;
    sc_signal< sc_lv<9> > r_V_reg_283;
    sc_signal< sc_lv<1> > tmp_12_reg_288;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter5_tmp_12_reg_288;
    sc_signal< sc_lv<3> > tmp_13_reg_294;
    sc_signal< sc_lv<1> > icmp_fu_203_p2;
    sc_signal< sc_lv<1> > icmp_reg_299;
    sc_signal< sc_lv<64> > tmp_3_fu_208_p1;
    sc_signal< sc_lv<24> > grp_fu_249_p2;
    sc_signal< sc_lv<23> > neg_mul_fu_119_p2;
    sc_signal< sc_lv<12> > tmp_fu_134_p1;
    sc_signal< sc_lv<12> > tmp_5_fu_137_p1;
    sc_signal< sc_lv<12> > p_v_fu_140_p3;
    sc_signal< sc_lv<9> > tmp_10_fu_147_p1;
    sc_signal< sc_lv<9> > neg_ti_fu_151_p2;
    sc_signal< sc_lv<9> > tmp_11_fu_157_p1;
    sc_signal< sc_lv<9> > tmp_9_fu_161_p3;
    sc_signal< sc_lv<13> > tmp_2_fu_192_p3;
    sc_signal< sc_lv<32> > index_fu_199_p1;
    sc_signal< sc_lv<1> > sel_tmp1_fu_213_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_218_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_231_p2;
    sc_signal< sc_lv<5> > sel_tmp_fu_223_p3;
    sc_signal< sc_lv<5> > storemerge1_fu_236_p3;
    sc_signal< sc_lv<13> > grp_fu_249_p0;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_pipeline_idle_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<9> ap_const_lv9_40;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<24> ap_const_lv24_889;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_done();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_pipeline_idle_pp0();
    void thread_ap_ready();
    void thread_delta_minus_table1_address0();
    void thread_delta_minus_table1_ce0();
    void thread_grp_fu_249_p0();
    void thread_icmp_fu_203_p2();
    void thread_index_fu_199_p1();
    void thread_neg_mul_fu_119_p2();
    void thread_neg_ti_fu_151_p2();
    void thread_p_v_fu_140_p3();
    void thread_r_V_fu_168_p2();
    void thread_res_V();
    void thread_res_V_ap_vld();
    void thread_sel_tmp1_fu_213_p2();
    void thread_sel_tmp2_fu_218_p2();
    void thread_sel_tmp_fu_223_p3();
    void thread_storemerge1_fu_236_p3();
    void thread_tmp_10_fu_147_p1();
    void thread_tmp_11_fu_157_p1();
    void thread_tmp_1_fu_107_p1();
    void thread_tmp_2_fu_192_p3();
    void thread_tmp_3_fu_208_p1();
    void thread_tmp_4_fu_231_p2();
    void thread_tmp_5_fu_137_p1();
    void thread_tmp_9_fu_161_p3();
    void thread_tmp_fu_134_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
