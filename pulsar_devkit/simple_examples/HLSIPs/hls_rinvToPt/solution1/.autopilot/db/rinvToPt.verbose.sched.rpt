

================================================================
== Vivado HLS Report for 'rinvToPt'
================================================================
* Date:           Mon Aug 20 16:40:50 2018

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        hls_rinvToPt
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1927-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.11|      3.53|        0.51|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    5|    5|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 1
  Pipeline-0: II = 1, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
* FSM state operations: 

 <State 1>: 0.92ns
ST_1: data_V_read (8)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:4  %data_V_read = call i24 @_ssdm_op_Read.ap_auto.i24P(i24* %data_V)

ST_1: OP1_V_cast (9)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:5  %OP1_V_cast = sext i24 %data_V_read to i32

ST_1: tmp (10)  [3/3] 0.92ns  loc: src/tk-mu_simple.h:480
_ifconv:6  %tmp = mul i32 -175, %OP1_V_cast


 <State 2>: 0.92ns
ST_2: tmp (10)  [2/3] 0.92ns  loc: src/tk-mu_simple.h:480
_ifconv:6  %tmp = mul i32 -175, %OP1_V_cast


 <State 3>: 2.50ns
ST_3: tmp (10)  [1/3] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:6  %tmp = mul i32 -175, %OP1_V_cast

ST_3: r_V (11)  [1/1] 2.50ns  loc: src/tk-mu_simple.h:480
_ifconv:7  %r_V = add i32 4194304, %tmp

ST_3: tmp_2 (12)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:8  %tmp_2 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %r_V, i32 8, i32 31)

ST_3: tmp_4 (15)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:11  %tmp_4 = trunc i32 %r_V to i8


 <State 4>: 3.53ns
ST_4: ret_V_cast_cast (13)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:9  %ret_V_cast_cast = sext i24 %tmp_2 to i25

ST_4: tmp_3 (14)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480 (grouped into LUT with out node index)
_ifconv:10  %tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %r_V, i32 31)

ST_4: p_Result_2 (16)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:12  %p_Result_2 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %tmp_4, i14 0)

ST_4: tmp_7 (17)  [1/1] 1.34ns  loc: src/tk-mu_simple.h:480
_ifconv:13  %tmp_7 = icmp eq i22 %p_Result_2, 0

ST_4: ret_V (18)  [1/1] 1.51ns  loc: src/tk-mu_simple.h:480
_ifconv:14  %ret_V = add i25 1, %ret_V_cast_cast

ST_4: tmp_6 (19)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480
_ifconv:15  %tmp_6 = sext i24 %tmp_2 to i32

ST_4: tmp_s (20)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480 (grouped into LUT with out node index)
_ifconv:16  %tmp_s = sext i25 %ret_V to i32

ST_4: tmp_5 (21)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:480 (grouped into LUT with out node index)
_ifconv:17  %tmp_5 = select i1 %tmp_7, i32 %tmp_6, i32 %tmp_s

ST_4: index (22)  [1/1] 0.71ns  loc: src/tk-mu_simple.h:480 (out node of the LUT)
_ifconv:18  %index = select i1 %tmp_3, i32 %tmp_5, i32 %tmp_6

ST_4: tmp_9 (23)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:482
_ifconv:19  %tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %index, i32 31)

ST_4: tmp_10 (24)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:483
_ifconv:20  %tmp_10 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %index, i32 14, i32 31)

ST_4: icmp (25)  [1/1] 1.31ns  loc: src/tk-mu_simple.h:483
_ifconv:21  %icmp = icmp sgt i18 %tmp_10, 0


 <State 5>: 2.39ns
ST_5: tmp_1 (26)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:484
_ifconv:22  %tmp_1 = zext i32 %index to i64

ST_5: rinvToPt_table1_addr (27)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:484
_ifconv:23  %rinvToPt_table1_addr = getelementptr [16384 x i14]* @rinvToPt_table1, i64 0, i64 %tmp_1

ST_5: rinvToPt_table1_load (28)  [2/2] 2.39ns  loc: src/tk-mu_simple.h:484
_ifconv:24  %rinvToPt_table1_load = load i14* %rinvToPt_table1_addr, align 2


 <State 6>: 3.10ns
ST_6: StgValue_30 (4)  [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecBitsMap(i24* %data_V), !map !388

ST_6: StgValue_31 (5)  [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecBitsMap(i14* %res_V), !map !392

ST_6: StgValue_32 (6)  [1/1] 0.00ns
_ifconv:2  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @rinvToPt_str) nounwind

ST_6: StgValue_33 (7)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:477
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str59) nounwind

ST_6: rinvToPt_table1_load (28)  [1/2] 2.39ns  loc: src/tk-mu_simple.h:484
_ifconv:24  %rinvToPt_table1_load = load i14* %rinvToPt_table1_addr, align 2

ST_6: sel_tmp1 (29)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:482 (grouped into LUT with out node sel_tmp2)
_ifconv:25  %sel_tmp1 = xor i1 %tmp_9, true

ST_6: sel_tmp2 (30)  [1/1] 0.71ns  loc: src/tk-mu_simple.h:483 (out node of the LUT)
_ifconv:26  %sel_tmp2 = and i1 %icmp, %sel_tmp1

ST_6: sel_tmp_cast (31)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:483 (grouped into LUT with out node storemerge1)
_ifconv:27  %sel_tmp_cast = select i1 %sel_tmp2, i14 0, i14 64

ST_6: tmp_8 (32)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:483 (grouped into LUT with out node storemerge1)
_ifconv:28  %tmp_8 = or i1 %sel_tmp2, %tmp_9

ST_6: storemerge1 (33)  [1/1] 0.71ns  loc: src/tk-mu_simple.h:483 (out node of the LUT)
_ifconv:29  %storemerge1 = select i1 %tmp_8, i14 %sel_tmp_cast, i14 %rinvToPt_table1_load

ST_6: StgValue_40 (34)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:482
_ifconv:30  call void @_ssdm_op_Write.ap_auto.i14P(i14* %res_V, i14 %storemerge1)

ST_6: StgValue_41 (35)  [1/1] 0.00ns  loc: src/tk-mu_simple.h:492
_ifconv:31  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.11ns, clock uncertainty: 0.514ns.

 <State 1>: 0.92ns
The critical path consists of the following:
	wire read on port 'data_V' (src/tk-mu_simple.h:480) [8]  (0 ns)
	'mul' operation ('tmp', src/tk-mu_simple.h:480) [10]  (0.92 ns)

 <State 2>: 0.92ns
The critical path consists of the following:
	'mul' operation ('tmp', src/tk-mu_simple.h:480) [10]  (0.92 ns)

 <State 3>: 2.5ns
The critical path consists of the following:
	'mul' operation ('tmp', src/tk-mu_simple.h:480) [10]  (0 ns)
	'add' operation ('r.V', src/tk-mu_simple.h:480) [11]  (2.5 ns)

 <State 4>: 3.53ns
The critical path consists of the following:
	'add' operation ('ret.V', src/tk-mu_simple.h:480) [18]  (1.51 ns)
	'select' operation ('tmp_5', src/tk-mu_simple.h:480) [21]  (0 ns)
	'select' operation ('index', src/tk-mu_simple.h:480) [22]  (0.71 ns)
	'icmp' operation ('icmp', src/tk-mu_simple.h:483) [25]  (1.31 ns)

 <State 5>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('rinvToPt_table1_addr', src/tk-mu_simple.h:484) [27]  (0 ns)
	'load' operation ('rinvToPt_table1_load', src/tk-mu_simple.h:484) on array 'rinvToPt_table1' [28]  (2.39 ns)

 <State 6>: 3.1ns
The critical path consists of the following:
	'load' operation ('rinvToPt_table1_load', src/tk-mu_simple.h:484) on array 'rinvToPt_table1' [28]  (2.39 ns)
	'select' operation ('storemerge1', src/tk-mu_simple.h:483) [33]  (0.71 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
